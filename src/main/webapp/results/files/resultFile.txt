{"CostMax.pctl":"R{\"cost\"}max=? [ F \"success\" ]\n","ReachabilityMin.pctl":"Pmin=? [ F \"success\" ]\n","ReachabilityMax.pctl":"Pmax=? [ F \"success\" ]\n","BSN.nm":"mdp\n\nconst int CTX_1; // SaO2_sensor = true \nconst int CTX_2; // ECG_sensor = true \nconst int CTX_3; // SaO2_sensor = true & ECG_sensor = true \nconst int CTX_4; // TEMP_sensor = true \nconst int CTX_5; // SaO2_sensor = true & TEMP_sensor = true \nconst int CTX_6; // ECG_sensor = true & TEMP_sensor = true \nconst int CTX_7; // SaO2_sensor = true & ECG_sensor = true & TEMP_sensor = true \nconst int CTX_8; // ABP_sensor = true \nconst int CTX_9; // SaO2_sensor = true & ABP_sensor = true \nconst int CTX_10; // ECG_sensor = true & ABP_sensor = true \nconst int CTX_11; // SaO2_sensor = true & ECG_sensor = true & ABP_sensor = true \nconst int CTX_12; // TEMP_sensor = true & ABP_sensor = true \nconst int CTX_13; // SaO2_sensor = true & TEMP_sensor = true & ABP_sensor = true \nconst int CTX_14; // ECG_sensor = true & TEMP_sensor = true & ABP_sensor = true \nconst int CTX_15; // SaO2_sensor = true & ECG_sensor = true & TEMP_sensor = true & ABP_sensor = true \nconst int CTX_16; // Unknown_sensor = true \nconst int CTX_17; // SaO2_sensor = true & Unknown_sensor = true \nconst int CTX_18; // ECG_sensor = true & Unknown_sensor = true \nconst int CTX_19; // SaO2_sensor = true & ECG_sensor = true & Unknown_sensor = true \nconst int CTX_20; // TEMP_sensor = true & Unknown_sensor = true \nconst int CTX_21; // SaO2_sensor = true & TEMP_sensor = true & Unknown_sensor = true \nconst int CTX_22; // ECG_sensor = true & TEMP_sensor = true & Unknown_sensor = true \nconst int CTX_23; // SaO2_sensor = true & ECG_sensor = true & TEMP_sensor = true & Unknown_sensor = true \nconst int CTX_24; // ABP_sensor = true & Unknown_sensor = true \nconst int CTX_25; // SaO2_sensor = true & ABP_sensor = true & Unknown_sensor = true \nconst int CTX_26; // ECG_sensor = true & ABP_sensor = true & Unknown_sensor = true \nconst int CTX_27; // SaO2_sensor = true & ECG_sensor = true & ABP_sensor = true & Unknown_sensor = true \nconst int CTX_28; // TEMP_sensor = true & ABP_sensor = true & Unknown_sensor = true \nconst int CTX_29; // SaO2_sensor = true & TEMP_sensor = true & ABP_sensor = true & Unknown_sensor = true \nconst int CTX_30; // ECG_sensor = true & TEMP_sensor = true & ABP_sensor = true & Unknown_sensor = true \nconst int CTX_31; // SaO2_sensor = true & ECG_sensor = true & TEMP_sensor = true & ABP_sensor = true & Unknown_sensor = true \n\nglobal CTX_G3_T1_1: [0..1] init 0;\nglobal CTX_G3_T1_2: [0..1] init 0;\nglobal CTX_G3_T1_3: [0..1] init 0;\nglobal CTX_G3_T1_4: [0..1] init 0;\nglobal CTX_G3_T1_X: [0..1] init 0;\n\r\n\r\nmodule NonDeterminism_G3_T1\r\n\tsG3_T1 :[0..2] init 0;\r\n\t\r\n\t[next_0] sG3_T1 = 0 -> (sG3_T1'= 1);\r\n\r\n\t[] sG3_T1 = 1 -> CTX_1 : (sG3_T1'= 2) & (CTX_G3_T1_1'=1) + (1 - CTX_1) : (sG3_T1'=1);\n\t[] sG3_T1 = 1 -> CTX_2 : (sG3_T1'= 2) & (CTX_G3_T1_2'=1) + (1 - CTX_2) : (sG3_T1'=1);\n\t[] sG3_T1 = 1 -> CTX_3 : (sG3_T1'= 2) & (CTX_G3_T1_1'=1) & (CTX_G3_T1_2'=1) + (1 - CTX_3) : (sG3_T1'=1);\n\t[] sG3_T1 = 1 -> CTX_4 : (sG3_T1'= 2) & (CTX_G3_T1_3'=1) + (1 - CTX_4) : (sG3_T1'=1);\n\t[] sG3_T1 = 1 -> CTX_5 : (sG3_T1'= 2) & (CTX_G3_T1_1'=1) & (CTX_G3_T1_3'=1) + (1 - CTX_5) : (sG3_T1'=1);\n\t[] sG3_T1 = 1 -> CTX_6 : (sG3_T1'= 2) & (CTX_G3_T1_2'=1) & (CTX_G3_T1_3'=1) + (1 - CTX_6) : (sG3_T1'=1);\n\t[] sG3_T1 = 1 -> CTX_7 : (sG3_T1'= 2) & (CTX_G3_T1_1'=1) & (CTX_G3_T1_2'=1) & (CTX_G3_T1_3'=1) + (1 - CTX_7) : (sG3_T1'=1);\n\t[] sG3_T1 = 1 -> CTX_8 : (sG3_T1'= 2) & (CTX_G3_T1_4'=1) + (1 - CTX_8) : (sG3_T1'=1);\n\t[] sG3_T1 = 1 -> CTX_9 : (sG3_T1'= 2) & (CTX_G3_T1_1'=1) & (CTX_G3_T1_4'=1) + (1 - CTX_9) : (sG3_T1'=1);\n\t[] sG3_T1 = 1 -> CTX_10 : (sG3_T1'= 2) & (CTX_G3_T1_2'=1) & (CTX_G3_T1_4'=1) + (1 - CTX_10) : (sG3_T1'=1);\n\t[] sG3_T1 = 1 -> CTX_11 : (sG3_T1'= 2) & (CTX_G3_T1_1'=1) & (CTX_G3_T1_2'=1) & (CTX_G3_T1_4'=1) + (1 - CTX_11) : (sG3_T1'=1);\n\t[] sG3_T1 = 1 -> CTX_12 : (sG3_T1'= 2) & (CTX_G3_T1_3'=1) & (CTX_G3_T1_4'=1) + (1 - CTX_12) : (sG3_T1'=1);\n\t[] sG3_T1 = 1 -> CTX_13 : (sG3_T1'= 2) & (CTX_G3_T1_1'=1) & (CTX_G3_T1_3'=1) & (CTX_G3_T1_4'=1) + (1 - CTX_13) : (sG3_T1'=1);\n\t[] sG3_T1 = 1 -> CTX_14 : (sG3_T1'= 2) & (CTX_G3_T1_2'=1) & (CTX_G3_T1_3'=1) & (CTX_G3_T1_4'=1) + (1 - CTX_14) : (sG3_T1'=1);\n\t[] sG3_T1 = 1 -> CTX_15 : (sG3_T1'= 2) & (CTX_G3_T1_1'=1) & (CTX_G3_T1_2'=1) & (CTX_G3_T1_3'=1) & (CTX_G3_T1_4'=1) + (1 - CTX_15) : (sG3_T1'=1);\n\t[] sG3_T1 = 1 -> CTX_16 : (sG3_T1'= 2) & (CTX_G3_T1_X'=1) + (1 - CTX_16) : (sG3_T1'=1);\n\t[] sG3_T1 = 1 -> CTX_17 : (sG3_T1'= 2) & (CTX_G3_T1_1'=1) & (CTX_G3_T1_X'=1) + (1 - CTX_17) : (sG3_T1'=1);\n\t[] sG3_T1 = 1 -> CTX_18 : (sG3_T1'= 2) & (CTX_G3_T1_2'=1) & (CTX_G3_T1_X'=1) + (1 - CTX_18) : (sG3_T1'=1);\n\t[] sG3_T1 = 1 -> CTX_19 : (sG3_T1'= 2) & (CTX_G3_T1_1'=1) & (CTX_G3_T1_2'=1) & (CTX_G3_T1_X'=1) + (1 - CTX_19) : (sG3_T1'=1);\n\t[] sG3_T1 = 1 -> CTX_20 : (sG3_T1'= 2) & (CTX_G3_T1_3'=1) & (CTX_G3_T1_X'=1) + (1 - CTX_20) : (sG3_T1'=1);\n\t[] sG3_T1 = 1 -> CTX_21 : (sG3_T1'= 2) & (CTX_G3_T1_1'=1) & (CTX_G3_T1_3'=1) & (CTX_G3_T1_X'=1) + (1 - CTX_21) : (sG3_T1'=1);\n\t[] sG3_T1 = 1 -> CTX_22 : (sG3_T1'= 2) & (CTX_G3_T1_2'=1) & (CTX_G3_T1_3'=1) & (CTX_G3_T1_X'=1) + (1 - CTX_22) : (sG3_T1'=1);\n\t[] sG3_T1 = 1 -> CTX_23 : (sG3_T1'= 2) & (CTX_G3_T1_1'=1) & (CTX_G3_T1_2'=1) & (CTX_G3_T1_3'=1) & (CTX_G3_T1_X'=1) + (1 - CTX_23) : (sG3_T1'=1);\n\t[] sG3_T1 = 1 -> CTX_24 : (sG3_T1'= 2) & (CTX_G3_T1_4'=1) & (CTX_G3_T1_X'=1) + (1 - CTX_24) : (sG3_T1'=1);\n\t[] sG3_T1 = 1 -> CTX_25 : (sG3_T1'= 2) & (CTX_G3_T1_1'=1) & (CTX_G3_T1_4'=1) & (CTX_G3_T1_X'=1) + (1 - CTX_25) : (sG3_T1'=1);\n\t[] sG3_T1 = 1 -> CTX_26 : (sG3_T1'= 2) & (CTX_G3_T1_2'=1) & (CTX_G3_T1_4'=1) & (CTX_G3_T1_X'=1) + (1 - CTX_26) : (sG3_T1'=1);\n\t[] sG3_T1 = 1 -> CTX_27 : (sG3_T1'= 2) & (CTX_G3_T1_1'=1) & (CTX_G3_T1_2'=1) & (CTX_G3_T1_4'=1) & (CTX_G3_T1_X'=1) + (1 - CTX_27) : (sG3_T1'=1);\n\t[] sG3_T1 = 1 -> CTX_28 : (sG3_T1'= 2) & (CTX_G3_T1_3'=1) & (CTX_G3_T1_4'=1) & (CTX_G3_T1_X'=1) + (1 - CTX_28) : (sG3_T1'=1);\n\t[] sG3_T1 = 1 -> CTX_29 : (sG3_T1'= 2) & (CTX_G3_T1_1'=1) & (CTX_G3_T1_3'=1) & (CTX_G3_T1_4'=1) & (CTX_G3_T1_X'=1) + (1 - CTX_29) : (sG3_T1'=1);\n\t[] sG3_T1 = 1 -> CTX_30 : (sG3_T1'= 2) & (CTX_G3_T1_2'=1) & (CTX_G3_T1_3'=1) & (CTX_G3_T1_4'=1) & (CTX_G3_T1_X'=1) + (1 - CTX_30) : (sG3_T1'=1);\n\t[] sG3_T1 = 1 -> CTX_31 : (sG3_T1'= 2) & (CTX_G3_T1_1'=1) & (CTX_G3_T1_2'=1) & (CTX_G3_T1_3'=1) & (CTX_G3_T1_4'=1) & (CTX_G3_T1_X'=1) + (1 - CTX_31) : (sG3_T1'=1);\n\r\n\t[] sG3_T1 = 1 -> (sG3_T1'=2); //no uncertainty holding\r\n\t \r\n\t[next_1] sG3_T1 = 2 -> (sG3_T1'=2);\r\nendmodule\r\n\nconst double R_G3_T1_11;\r\nmodule G3_T1_11_ReadData\r\n\tsG3_T1_11 :[0..4] init 0;\r\n\t\r\n\t[next_1] sG3_T1_11 = 0 -> (sG3_T1_11'=1);//init to running\n\t\n\r\n\t[] sG3_T1_11 = 1 -> R_G3_T1_11 : (sG3_T1_11'=2) + (1 - R_G3_T1_11) : (sG3_T1_11'=4);//running to final state\r\n\t[next_2] sG3_T1_11 = 2 -> (sG3_T1_11'=2);//final state success\r\n\t[next_2] sG3_T1_11 = 3 -> (sG3_T1_11'=3);//final state skipped\r\n\t[next_2] sG3_T1_11 = 4 -> (sG3_T1_11'=4);//final state failure\r\nendmodule\r\n\nconst double R_G3_T1_12;\r\nmodule G3_T1_12_FilterData\r\n\tsG3_T1_12 :[0..4] init 0;\r\n\t\r\n\t[next_2] sG3_T1_12 = 0 -> (sG3_T1_12'=1);//init to running\n\t\n\r\n\t[] sG3_T1_12 = 1 -> R_G3_T1_12 : (sG3_T1_12'=2) + (1 - R_G3_T1_12) : (sG3_T1_12'=4);//running to final state\r\n\t[next_3] sG3_T1_12 = 2 -> (sG3_T1_12'=2);//final state success\r\n\t[next_3] sG3_T1_12 = 3 -> (sG3_T1_12'=3);//final state skipped\r\n\t[next_3] sG3_T1_12 = 4 -> (sG3_T1_12'=4);//final state failure\r\nendmodule\r\n\nconst double R_G3_T1_13;\r\nmodule G3_T1_13_TransferData\r\n\tsG3_T1_13 :[0..4] init 0;\r\n\t\r\n\t[next_3] sG3_T1_13 = 0 -> (sG3_T1_13'=1);//init to running\n\t\n\r\n\t[] sG3_T1_13 = 1 -> R_G3_T1_13 : (sG3_T1_13'=2) + (1 - R_G3_T1_13) : (sG3_T1_13'=4);//running to final state\r\n\t[next_4] sG3_T1_13 = 2 -> (sG3_T1_13'=2);//final state success\r\n\t[next_4] sG3_T1_13 = 3 -> (sG3_T1_13'=3);//final state skipped\r\n\t[next_4] sG3_T1_13 = 4 -> (sG3_T1_13'=4);//final state failure\r\nendmodule\r\n\nconst double R_G3_T1_21;\r\nmodule G3_T1_21_ReadData\r\n\tsG3_T1_21 :[0..4] init 0;\r\n\t\r\n\t[next_1] sG3_T1_21 = 0 -> (sG3_T1_21'=1);//init to running\n\t\n\r\n\t[] sG3_T1_21 = 1 -> R_G3_T1_21 : (sG3_T1_21'=2) + (1 - R_G3_T1_21) : (sG3_T1_21'=4);//running to final state\r\n\t[next_2] sG3_T1_21 = 2 -> (sG3_T1_21'=2);//final state success\r\n\t[next_2] sG3_T1_21 = 3 -> (sG3_T1_21'=3);//final state skipped\r\n\t[next_2] sG3_T1_21 = 4 -> (sG3_T1_21'=4);//final state failure\r\nendmodule\r\n\nconst double R_G3_T1_22;\r\nmodule G3_T1_22_FilterData\r\n\tsG3_T1_22 :[0..4] init 0;\r\n\t\r\n\t[next_2] sG3_T1_22 = 0 -> (sG3_T1_22'=1);//init to running\n\t\n\r\n\t[] sG3_T1_22 = 1 -> R_G3_T1_22 : (sG3_T1_22'=2) + (1 - R_G3_T1_22) : (sG3_T1_22'=4);//running to final state\r\n\t[next_3] sG3_T1_22 = 2 -> (sG3_T1_22'=2);//final state success\r\n\t[next_3] sG3_T1_22 = 3 -> (sG3_T1_22'=3);//final state skipped\r\n\t[next_3] sG3_T1_22 = 4 -> (sG3_T1_22'=4);//final state failure\r\nendmodule\r\n\nconst double R_G3_T1_23;\r\nmodule G3_T1_23_TransferData\r\n\tsG3_T1_23 :[0..4] init 0;\r\n\t\r\n\t[next_3] sG3_T1_23 = 0 -> (sG3_T1_23'=1);//init to running\n\t\n\r\n\t[] sG3_T1_23 = 1 -> R_G3_T1_23 : (sG3_T1_23'=2) + (1 - R_G3_T1_23) : (sG3_T1_23'=4);//running to final state\r\n\t[next_4] sG3_T1_23 = 2 -> (sG3_T1_23'=2);//final state success\r\n\t[next_4] sG3_T1_23 = 3 -> (sG3_T1_23'=3);//final state skipped\r\n\t[next_4] sG3_T1_23 = 4 -> (sG3_T1_23'=4);//final state failure\r\nendmodule\r\n\nconst double R_G3_T1_31;\r\nmodule G3_T1_31_ReadData\r\n\tsG3_T1_31 :[0..4] init 0;\r\n\t\r\n\t[next_1] sG3_T1_31 = 0 -> (sG3_T1_31'=1);//init to running\n\t\n\r\n\t[] sG3_T1_31 = 1 -> R_G3_T1_31 : (sG3_T1_31'=2) + (1 - R_G3_T1_31) : (sG3_T1_31'=4);//running to final state\r\n\t[next_2] sG3_T1_31 = 2 -> (sG3_T1_31'=2);//final state success\r\n\t[next_2] sG3_T1_31 = 3 -> (sG3_T1_31'=3);//final state skipped\r\n\t[next_2] sG3_T1_31 = 4 -> (sG3_T1_31'=4);//final state failure\r\nendmodule\r\n\nconst double R_G3_T1_32;\r\nmodule G3_T1_32_FilterData\r\n\tsG3_T1_32 :[0..4] init 0;\r\n\t\r\n\t[next_2] sG3_T1_32 = 0 -> (sG3_T1_32'=1);//init to running\n\t\n\r\n\t[] sG3_T1_32 = 1 -> R_G3_T1_32 : (sG3_T1_32'=2) + (1 - R_G3_T1_32) : (sG3_T1_32'=4);//running to final state\r\n\t[next_3] sG3_T1_32 = 2 -> (sG3_T1_32'=2);//final state success\r\n\t[next_3] sG3_T1_32 = 3 -> (sG3_T1_32'=3);//final state skipped\r\n\t[next_3] sG3_T1_32 = 4 -> (sG3_T1_32'=4);//final state failure\r\nendmodule\r\n\nconst double R_G3_T1_33;\r\nmodule G3_T1_33_TransferData\r\n\tsG3_T1_33 :[0..4] init 0;\r\n\t\r\n\t[next_3] sG3_T1_33 = 0 -> (sG3_T1_33'=1);//init to running\n\t\n\r\n\t[] sG3_T1_33 = 1 -> R_G3_T1_33 : (sG3_T1_33'=2) + (1 - R_G3_T1_33) : (sG3_T1_33'=4);//running to final state\r\n\t[next_4] sG3_T1_33 = 2 -> (sG3_T1_33'=2);//final state success\r\n\t[next_4] sG3_T1_33 = 3 -> (sG3_T1_33'=3);//final state skipped\r\n\t[next_4] sG3_T1_33 = 4 -> (sG3_T1_33'=4);//final state failure\r\nendmodule\r\n\nconst double R_G3_T1_411;\r\nmodule G3_T1_411_ReadDiastolic\r\n\tsG3_T1_411 :[0..4] init 0;\r\n\t\r\n\t[next_1] sG3_T1_411 = 0 -> (sG3_T1_411'=1);//init to running\n\t\n\r\n\t[] sG3_T1_411 = 1 -> R_G3_T1_411 : (sG3_T1_411'=2) + (1 - R_G3_T1_411) : (sG3_T1_411'=4);//running to final state\r\n\t[next_2] sG3_T1_411 = 2 -> (sG3_T1_411'=2);//final state success\r\n\t[next_2] sG3_T1_411 = 3 -> (sG3_T1_411'=3);//final state skipped\r\n\t[next_2] sG3_T1_411 = 4 -> (sG3_T1_411'=4);//final state failure\r\nendmodule\r\n\nconst double R_G3_T1_412;\r\nmodule G3_T1_412_ReadSystolic\r\n\tsG3_T1_412 :[0..4] init 0;\r\n\t\r\n\t[next_2] sG3_T1_412 = 0 -> (sG3_T1_412'=1);//init to running\n\t\n\r\n\t[] sG3_T1_412 = 1 -> R_G3_T1_412 : (sG3_T1_412'=2) + (1 - R_G3_T1_412) : (sG3_T1_412'=4);//running to final state\r\n\t[next_3] sG3_T1_412 = 2 -> (sG3_T1_412'=2);//final state success\r\n\t[next_3] sG3_T1_412 = 3 -> (sG3_T1_412'=3);//final state skipped\r\n\t[next_3] sG3_T1_412 = 4 -> (sG3_T1_412'=4);//final state failure\r\nendmodule\r\n\nconst double R_G3_T1_42;\r\nmodule G3_T1_42_FilterData\r\n\tsG3_T1_42 :[0..4] init 0;\r\n\t\r\n\t[next_3] sG3_T1_42 = 0 -> (sG3_T1_42'=1);//init to running\n\t\n\r\n\t[] sG3_T1_42 = 1 -> R_G3_T1_42 : (sG3_T1_42'=2) + (1 - R_G3_T1_42) : (sG3_T1_42'=4);//running to final state\r\n\t[next_4] sG3_T1_42 = 2 -> (sG3_T1_42'=2);//final state success\r\n\t[next_4] sG3_T1_42 = 3 -> (sG3_T1_42'=3);//final state skipped\r\n\t[next_4] sG3_T1_42 = 4 -> (sG3_T1_42'=4);//final state failure\r\nendmodule\r\n\nconst double R_G3_T1_43;\r\nmodule G3_T1_43_TransferData\r\n\tsG3_T1_43 :[0..4] init 0;\r\n\t\r\n\t[next_4] sG3_T1_43 = 0 -> (sG3_T1_43'=1);//init to running\n\t\n\r\n\t[] sG3_T1_43 = 1 -> R_G3_T1_43 : (sG3_T1_43'=2) + (1 - R_G3_T1_43) : (sG3_T1_43'=4);//running to final state\r\n\t[next_5] sG3_T1_43 = 2 -> (sG3_T1_43'=2);//final state success\r\n\t[next_5] sG3_T1_43 = 3 -> (sG3_T1_43'=3);//final state skipped\r\n\t[next_5] sG3_T1_43 = 4 -> (sG3_T1_43'=4);//final state failure\r\nendmodule\r\n\nconst int OPT_G3_T1_X;\r\nconst double R_G3_T1_X;\r\nmodule G3_T1_X_Unknown\r\n\tsG3_T1_X :[0..4] init 0;\r\n\t\r\n\t[next_1] sG3_T1_X = 0 -> OPT_G3_T1_X*CTX_G3_T1_X : (sG3_T1_X'=1) + (1 - OPT_G3_T1_X*CTX_G3_T1_X) : (sG3_T1_X'=3); //init to running or skip\r\n\t\r\n\r\n\t[] sG3_T1_X = 1 -> R_G3_T1_X : (sG3_T1_X'=2) + (1 - R_G3_T1_X) : (sG3_T1_X'=4);//running to final state\r\n\t[next_2] sG3_T1_X = 2 -> (sG3_T1_X'=2);//final state success\r\n\t[next_2] sG3_T1_X = 3 -> (sG3_T1_X'=3);//final state skipped\r\n\t[next_2] sG3_T1_X = 4 -> (sG3_T1_X'=4);//final state failure\r\nendmodule\r\n\nformula G3 = (((sG3_T1_11=2) & (sG3_T1_12=2) & (sG3_T1_13=2)) | ((sG3_T1_21=2) & (sG3_T1_22=2) & (sG3_T1_23=2)) | ((sG3_T1_31=2) & (sG3_T1_32=2) & (sG3_T1_33=2)) | (((sG3_T1_411=2) & (sG3_T1_412=2)) & (sG3_T1_42=2) & (sG3_T1_43=2)));\n\nconst double R_G4_T1_1;\r\nmodule G4_T1_1_FuseSensorsData\r\n\tsG4_T1_1 :[0..4] init 0;\r\n\t\r\n\t[next_5] (G3) & sG4_T1_1 = 0 -> (sG4_T1_1'=1);//init to running\n\t[next_5] !(G3) & sG4_T1_1 = 0 -> (sG4_T1_1'=3);//init to skip\n\r\n\t[] sG4_T1_1 = 1 -> R_G4_T1_1 : (sG4_T1_1'=2) + (1 - R_G4_T1_1) : (sG4_T1_1'=4);//running to final state\r\n\t[next_6] sG4_T1_1 = 2 -> (sG4_T1_1'=2);//final state success\r\n\t[next_6] sG4_T1_1 = 3 -> (sG4_T1_1'=3);//final state skipped\r\n\t[next_6] sG4_T1_1 = 4 -> (sG4_T1_1'=4);//final state failure\r\nendmodule\r\n\nconst double R_G4_T1_2;\r\nmodule G4_T1_2_DetectPatientStatus\r\n\tsG4_T1_2 :[0..4] init 0;\r\n\t\r\n\t[next_6] (G3) & sG4_T1_2 = 0 -> (sG4_T1_2'=1);//init to running\n\t[next_6] !(G3) & sG4_T1_2 = 0 -> (sG4_T1_2'=3);//init to skip\n\r\n\t[] sG4_T1_2 = 1 -> R_G4_T1_2 : (sG4_T1_2'=2) + (1 - R_G4_T1_2) : (sG4_T1_2'=4);//running to final state\r\n\t[next_7] sG4_T1_2 = 2 -> (sG4_T1_2'=2);//final state success\r\n\t[next_7] sG4_T1_2 = 3 -> (sG4_T1_2'=3);//final state skipped\r\n\t[next_7] sG4_T1_2 = 4 -> (sG4_T1_2'=4);//final state failure\r\nendmodule\r\n\nconst double R_G4_T1_3;\r\nmodule G4_T1_3_PersistData\r\n\tsG4_T1_3 :[0..4] init 0;\r\n\t\r\n\t[next_7] (G3) & sG4_T1_3 = 0 -> (sG4_T1_3'=1);//init to running\n\t[next_7] !(G3) & sG4_T1_3 = 0 -> (sG4_T1_3'=3);//init to skip\n\r\n\t[] sG4_T1_3 = 1 -> R_G4_T1_3 : (sG4_T1_3'=2) + (1 - R_G4_T1_3) : (sG4_T1_3'=4);//running to final state\r\n\t[next_8] sG4_T1_3 = 2 -> (sG4_T1_3'=2);//final state success\r\n\t[next_8] sG4_T1_3 = 3 -> (sG4_T1_3'=3);//final state skipped\r\n\t[next_8] sG4_T1_3 = 4 -> (sG4_T1_3'=4);//final state failure\r\nendmodule\r\n\nformula G4 = ((sG4_T1_1=2) & (sG4_T1_2=2) & (sG4_T1_3=2));\n\nformula G2 = G3 & G4;\nformula G1 = G2;\nlabel \"success\" = G1;\n\nconst double W_G3_T1_11;\nconst double W_G3_T1_12;\nconst double W_G3_T1_13;\nconst double W_G3_T1_21;\nconst double W_G3_T1_22;\nconst double W_G3_T1_23;\nconst double W_G3_T1_31;\nconst double W_G3_T1_32;\nconst double W_G3_T1_33;\nconst double W_G3_T1_411;\nconst double W_G3_T1_412;\nconst double W_G3_T1_42;\nconst double W_G3_T1_43;\nconst double W_G3_T1_X;\nconst double W_G4_T1_1;\nconst double W_G4_T1_2;\nconst double W_G4_T1_3;\nrewards \"cost\"\n\tsG3_T1_11 = 1 : W_G3_T1_11;\n\tsG3_T1_12 = 1 : W_G3_T1_12;\n\tsG3_T1_13 = 1 : W_G3_T1_13;\n\tsG3_T1_21 = 1 : W_G3_T1_21;\n\tsG3_T1_22 = 1 : W_G3_T1_22;\n\tsG3_T1_23 = 1 : W_G3_T1_23;\n\tsG3_T1_31 = 1 : W_G3_T1_31;\n\tsG3_T1_32 = 1 : W_G3_T1_32;\n\tsG3_T1_33 = 1 : W_G3_T1_33;\n\tsG3_T1_411 = 1 : W_G3_T1_411;\n\tsG3_T1_412 = 1 : W_G3_T1_412;\n\tsG3_T1_42 = 1 : W_G3_T1_42;\n\tsG3_T1_43 = 1 : W_G3_T1_43;\n\tsG3_T1_X = 1 : W_G3_T1_X;\n\tsG4_T1_1 = 1 : W_G4_T1_1;\n\tsG4_T1_2 = 1 : W_G4_T1_2;\n\tsG4_T1_3 = 1 : W_G4_T1_3;\n\t\nendrewards\n\n","CostMin.pctl":"R{\"cost\"}min=? [ F \"success\" ]\n"}