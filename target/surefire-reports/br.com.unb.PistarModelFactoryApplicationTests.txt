-------------------------------------------------------------------------------
Test set: br.com.unb.PistarModelFactoryApplicationTests
-------------------------------------------------------------------------------
Tests run: 6, Failures: 5, Errors: 0, Skipped: 0, Time elapsed: 7.651 s <<< FAILURE! - in br.com.unb.PistarModelFactoryApplicationTests
executePistarFactoryMutroseNotSendConfigurationFile  Time elapsed: 2.002 s  <<< FAILURE!
org.opentest4j.AssertionFailedError: expected: <null> but was: <{actions=[{name=clean-room, capabilities=cleaning}, {name=clean-rooms-check, capabilities=}, {name=move-furniture, capabilities=moveobject}, {name=open-door, capabilities=door-opening}, {name=sanitize-robot, capabilities=sanitize}], tasks={t0={id=AT1_1|1, name=RoomCleaning, arguments={?r=CleanerRobot, ?rm=room}, arguments_values={?r=, ?rm=RoomA}, locations=RoomA, robots_num={fixed=True, num=1}, preconditions=[{predicate=RoomA.door_open, vars=RoomA, var_types=room}, {predicate=not RoomA.is_clean, vars=RoomA, var_types=room}], effects=[{predicate=RoomA.is_clean, vars=RoomA, var_types=room}, {predicate=not ?r.is_sanitized, vars=?r, var_types=robot}], triggering_events=[assertion trigger "E1"], decomposition={a0={name=clean-room, arguments=?r ?rm}}, group=True, divisible=True}, t1={id=AT1_1|2, name=RoomCleaning, arguments={?r=CleanerRobot, ?rm=room}, arguments_values={?r=, ?rm=RoomA}, locations=RoomA, robots_num={fixed=True, num=1}, preconditions=[{predicate=not RoomA.door_open, vars=RoomA, var_types=room}, {predicate=not RoomA.door_open, vars=RoomA, var_types=room}, {predicate=not RoomA.is_clean, vars=RoomA, var_types=room}], effects=[{predicate=RoomA.door_open, vars=RoomA, var_types=room}, {predicate=RoomA.is_clean, vars=RoomA, var_types=room}, {predicate=not ?r.is_sanitized, vars=?r, var_types=robot}], triggering_events=[assertion trigger "E1"], decomposition={a0={name=open-door, arguments=?r ?rm}, a1={name=clean-room, arguments=?r ?rm}}, group=True, divisible=True}, t2={id=AT2_1|1, name=RobotSanitization, arguments={?r=CleanerRobot, ?srm=room}, arguments_values={?r=, ?srm=SanitizationRoom}, locations=SanitizationRoom, robots_num={fixed=True, num=1}, preconditions=[{predicate=not ?r.is_sanitized, vars=?r, var_types=robot}], effects=[{predicate=?r.is_sanitized, vars=?r, var_types=robot}], triggering_events=[assertion trigger "E1"], decomposition={a0={name=sanitize-robot, arguments=?r ?srm}}, group=True, divisible=True}, t3={id=AT3_1|1, name=FurnitureMoving, arguments={?rt=robotteam, ?rm=room}, arguments_values={?rt=, ?rm=RoomA}, locations=RoomA, robots_num={fixed=False, min=2, max=4}, preconditions=, effects=[{predicate=RoomA.is_prepared, vars=RoomA, var_types=room}], triggering_events=, decomposition={a0={name=move-furniture, arguments=?rt ?rm}}, group=True, divisible=True}, t4={id=AT1_2|1, name=RoomCleaning, arguments={?r=CleanerRobot, ?rm=room}, arguments_values={?r=, ?rm=RoomB}, locations=RoomB, robots_num={fixed=True, num=1}, preconditions=[{predicate=RoomB.door_open, vars=RoomB, var_types=room}, {predicate=not RoomB.is_clean, vars=RoomB, var_types=room}], effects=[{predicate=RoomB.is_clean, vars=RoomB, var_types=room}, {predicate=not ?r.is_sanitized, vars=?r, var_types=robot}], triggering_events=[assertion trigger "E1"], decomposition={a0={name=clean-room, arguments=?r ?rm}}, group=True, divisible=True}, t5={id=AT1_2|2, name=RoomCleaning, arguments={?r=CleanerRobot, ?rm=room}, arguments_values={?r=, ?rm=RoomB}, locations=RoomB, robots_num={fixed=True, num=1}, preconditions=[{predicate=not RoomB.door_open, vars=RoomB, var_types=room}, {predicate=not RoomB.door_open, vars=RoomB, var_types=room}, {predicate=not RoomB.is_clean, vars=RoomB, var_types=room}], effects=[{predicate=RoomB.door_open, vars=RoomB, var_types=room}, {predicate=RoomB.is_clean, vars=RoomB, var_types=room}, {predicate=not ?r.is_sanitized, vars=?r, var_types=robot}], triggering_events=[assertion trigger "E1"], decomposition={a0={name=open-door, arguments=?r ?rm}, a1={name=clean-room, arguments=?r ?rm}}, group=True, divisible=True}, t6={id=AT2_2|1, name=RobotSanitization, arguments={?r=CleanerRobot, ?srm=room}, arguments_values={?r=, ?srm=SanitizationRoom}, locations=SanitizationRoom, robots_num={fixed=True, num=1}, preconditions=[{predicate=not ?r.is_sanitized, vars=?r, var_types=robot}], effects=[{predicate=?r.is_sanitized, vars=?r, var_types=robot}], triggering_events=[assertion trigger "E1"], decomposition={a0={name=sanitize-robot, arguments=?r ?srm}}, group=True, divisible=True}, t7={id=AT3_2|1, name=FurnitureMoving, arguments={?rt=robotteam, ?rm=room}, arguments_values={?rt=, ?rm=RoomB}, locations=RoomB, robots_num={fixed=False, min=2, max=4}, preconditions=, effects=[{predicate=RoomB.is_prepared, vars=RoomB, var_types=room}], triggering_events=, decomposition={a0={name=move-furniture, arguments=?rt ?rm}}, group=True, divisible=True}, t8={id=AT4_1|1, name=CheckCleanRooms, arguments={?r=robot, ?rms=rooms}, arguments_values={?r=, ?rms=[RoomA,RoomB]}, locations=[RoomA, RoomB], robots_num={fixed=True, num=1}, preconditions=[{predicate=RoomA.is_clean, vars=RoomA, var_types=room}, {predicate=RoomB.is_clean, vars=RoomB, var_types=room}], effects=, triggering_events=, decomposition={a0={name=clean-rooms-check, arguments=?r ?rms}}, group=True, divisible=True}}, constraints=[{type=SEQ, task_instances={t0=t7, t1=t8}}, {type=SEQ, task_instances={t0=t3, t1=t8}}, {type=SEQ, task_instances={t0=t6, t1=t8}}, {type=SEQ, task_instances={t0=t2, t1=t8}}, {type=SEQ, task_instances={t0=t0, t1=t3}}, {type=SEQ, task_instances={t0=t1, t1=t3}}, {type=SEQ, task_instances={t0=t0, t1=t2}}, {type=SEQ, task_instances={t0=t1, t1=t2}}, {type=SEQ, task_instances={t0=t4, t1=t7}}, {type=SEQ, task_instances={t0=t5, t1=t7}}, {type=SEQ, task_instances={t0=t4, t1=t6}}, {type=SEQ, task_instances={t0=t5, t1=t6}}, {type=EC, task_instances={t0=t0, t1=t2}, group=False, divisible=True}, {type=EC, task_instances={t0=t1, t1=t2}, group=False, divisible=True}, {type=EC, task_instances={t0=t4, t1=t6}, group=False, divisible=True}, {type=EC, task_instances={t0=t5, t1=t6}, group=False, divisible=True}], mission_decompositions=[[t1, t2, t3, t4, t6, t7, t8]]}>
	at br.com.unb.PistarModelFactoryApplicationTests.executePistarFactoryMutroseNotSendConfigurationFile(PistarModelFactoryApplicationTests.java:43)

executePistarFactoryMutroseNotSendWorldKnowledgeFile  Time elapsed: 0.688 s  <<< FAILURE!
org.opentest4j.AssertionFailedError: expected: <null> but was: <{actions=[{name=clean-room, capabilities=cleaning}, {name=clean-rooms-check, capabilities=}, {name=move-furniture, capabilities=moveobject}, {name=open-door, capabilities=door-opening}, {name=sanitize-robot, capabilities=sanitize}], tasks={t0={id=AT1_1|1, name=RoomCleaning, arguments={?r=CleanerRobot, ?rm=room}, arguments_values={?r=, ?rm=RoomA}, locations=RoomA, robots_num={fixed=True, num=1}, preconditions=[{predicate=RoomA.door_open, vars=RoomA, var_types=room}, {predicate=not RoomA.is_clean, vars=RoomA, var_types=room}], effects=[{predicate=RoomA.is_clean, vars=RoomA, var_types=room}, {predicate=not ?r.is_sanitized, vars=?r, var_types=robot}], triggering_events=[assertion trigger "E1"], decomposition={a0={name=clean-room, arguments=?r ?rm}}, group=True, divisible=True}, t1={id=AT1_1|2, name=RoomCleaning, arguments={?r=CleanerRobot, ?rm=room}, arguments_values={?r=, ?rm=RoomA}, locations=RoomA, robots_num={fixed=True, num=1}, preconditions=[{predicate=not RoomA.door_open, vars=RoomA, var_types=room}, {predicate=not RoomA.door_open, vars=RoomA, var_types=room}, {predicate=not RoomA.is_clean, vars=RoomA, var_types=room}], effects=[{predicate=RoomA.door_open, vars=RoomA, var_types=room}, {predicate=RoomA.is_clean, vars=RoomA, var_types=room}, {predicate=not ?r.is_sanitized, vars=?r, var_types=robot}], triggering_events=[assertion trigger "E1"], decomposition={a0={name=open-door, arguments=?r ?rm}, a1={name=clean-room, arguments=?r ?rm}}, group=True, divisible=True}, t2={id=AT2_1|1, name=RobotSanitization, arguments={?r=CleanerRobot, ?srm=room}, arguments_values={?r=, ?srm=SanitizationRoom}, locations=SanitizationRoom, robots_num={fixed=True, num=1}, preconditions=[{predicate=not ?r.is_sanitized, vars=?r, var_types=robot}], effects=[{predicate=?r.is_sanitized, vars=?r, var_types=robot}], triggering_events=[assertion trigger "E1"], decomposition={a0={name=sanitize-robot, arguments=?r ?srm}}, group=True, divisible=True}, t3={id=AT3_1|1, name=FurnitureMoving, arguments={?rt=robotteam, ?rm=room}, arguments_values={?rt=, ?rm=RoomA}, locations=RoomA, robots_num={fixed=False, min=2, max=4}, preconditions=, effects=[{predicate=RoomA.is_prepared, vars=RoomA, var_types=room}], triggering_events=, decomposition={a0={name=move-furniture, arguments=?rt ?rm}}, group=True, divisible=True}, t4={id=AT1_2|1, name=RoomCleaning, arguments={?r=CleanerRobot, ?rm=room}, arguments_values={?r=, ?rm=RoomB}, locations=RoomB, robots_num={fixed=True, num=1}, preconditions=[{predicate=RoomB.door_open, vars=RoomB, var_types=room}, {predicate=not RoomB.is_clean, vars=RoomB, var_types=room}], effects=[{predicate=RoomB.is_clean, vars=RoomB, var_types=room}, {predicate=not ?r.is_sanitized, vars=?r, var_types=robot}], triggering_events=[assertion trigger "E1"], decomposition={a0={name=clean-room, arguments=?r ?rm}}, group=True, divisible=True}, t5={id=AT1_2|2, name=RoomCleaning, arguments={?r=CleanerRobot, ?rm=room}, arguments_values={?r=, ?rm=RoomB}, locations=RoomB, robots_num={fixed=True, num=1}, preconditions=[{predicate=not RoomB.door_open, vars=RoomB, var_types=room}, {predicate=not RoomB.door_open, vars=RoomB, var_types=room}, {predicate=not RoomB.is_clean, vars=RoomB, var_types=room}], effects=[{predicate=RoomB.door_open, vars=RoomB, var_types=room}, {predicate=RoomB.is_clean, vars=RoomB, var_types=room}, {predicate=not ?r.is_sanitized, vars=?r, var_types=robot}], triggering_events=[assertion trigger "E1"], decomposition={a0={name=open-door, arguments=?r ?rm}, a1={name=clean-room, arguments=?r ?rm}}, group=True, divisible=True}, t6={id=AT2_2|1, name=RobotSanitization, arguments={?r=CleanerRobot, ?srm=room}, arguments_values={?r=, ?srm=SanitizationRoom}, locations=SanitizationRoom, robots_num={fixed=True, num=1}, preconditions=[{predicate=not ?r.is_sanitized, vars=?r, var_types=robot}], effects=[{predicate=?r.is_sanitized, vars=?r, var_types=robot}], triggering_events=[assertion trigger "E1"], decomposition={a0={name=sanitize-robot, arguments=?r ?srm}}, group=True, divisible=True}, t7={id=AT3_2|1, name=FurnitureMoving, arguments={?rt=robotteam, ?rm=room}, arguments_values={?rt=, ?rm=RoomB}, locations=RoomB, robots_num={fixed=False, min=2, max=4}, preconditions=, effects=[{predicate=RoomB.is_prepared, vars=RoomB, var_types=room}], triggering_events=, decomposition={a0={name=move-furniture, arguments=?rt ?rm}}, group=True, divisible=True}, t8={id=AT4_1|1, name=CheckCleanRooms, arguments={?r=robot, ?rms=rooms}, arguments_values={?r=, ?rms=[RoomA,RoomB]}, locations=[RoomA, RoomB], robots_num={fixed=True, num=1}, preconditions=[{predicate=RoomA.is_clean, vars=RoomA, var_types=room}, {predicate=RoomB.is_clean, vars=RoomB, var_types=room}], effects=, triggering_events=, decomposition={a0={name=clean-rooms-check, arguments=?r ?rms}}, group=True, divisible=True}}, constraints=[{type=SEQ, task_instances={t0=t7, t1=t8}}, {type=SEQ, task_instances={t0=t3, t1=t8}}, {type=SEQ, task_instances={t0=t6, t1=t8}}, {type=SEQ, task_instances={t0=t2, t1=t8}}, {type=SEQ, task_instances={t0=t0, t1=t3}}, {type=SEQ, task_instances={t0=t1, t1=t3}}, {type=SEQ, task_instances={t0=t0, t1=t2}}, {type=SEQ, task_instances={t0=t1, t1=t2}}, {type=SEQ, task_instances={t0=t4, t1=t7}}, {type=SEQ, task_instances={t0=t5, t1=t7}}, {type=SEQ, task_instances={t0=t4, t1=t6}}, {type=SEQ, task_instances={t0=t5, t1=t6}}, {type=EC, task_instances={t0=t0, t1=t2}, group=False, divisible=True}, {type=EC, task_instances={t0=t1, t1=t2}, group=False, divisible=True}, {type=EC, task_instances={t0=t4, t1=t6}, group=False, divisible=True}, {type=EC, task_instances={t0=t5, t1=t6}, group=False, divisible=True}], mission_decompositions=[[t1, t2, t3, t4, t6, t7, t8]]}>
	at br.com.unb.PistarModelFactoryApplicationTests.executePistarFactoryMutroseNotSendWorldKnowledgeFile(PistarModelFactoryApplicationTests.java:50)

executePistarFactoryMutroseNotSendModelFile  Time elapsed: 0.668 s  <<< FAILURE!
org.opentest4j.AssertionFailedError: expected: <null> but was: <{actions=[{name=clean-room, capabilities=cleaning}, {name=clean-rooms-check, capabilities=}, {name=move-furniture, capabilities=moveobject}, {name=open-door, capabilities=door-opening}, {name=sanitize-robot, capabilities=sanitize}], tasks={t0={id=AT1_1|1, name=RoomCleaning, arguments={?r=CleanerRobot, ?rm=room}, arguments_values={?r=, ?rm=RoomA}, locations=RoomA, robots_num={fixed=True, num=1}, preconditions=[{predicate=RoomA.door_open, vars=RoomA, var_types=room}, {predicate=not RoomA.is_clean, vars=RoomA, var_types=room}], effects=[{predicate=RoomA.is_clean, vars=RoomA, var_types=room}, {predicate=not ?r.is_sanitized, vars=?r, var_types=robot}], triggering_events=[assertion trigger "E1"], decomposition={a0={name=clean-room, arguments=?r ?rm}}, group=True, divisible=True}, t1={id=AT1_1|2, name=RoomCleaning, arguments={?r=CleanerRobot, ?rm=room}, arguments_values={?r=, ?rm=RoomA}, locations=RoomA, robots_num={fixed=True, num=1}, preconditions=[{predicate=not RoomA.door_open, vars=RoomA, var_types=room}, {predicate=not RoomA.door_open, vars=RoomA, var_types=room}, {predicate=not RoomA.is_clean, vars=RoomA, var_types=room}], effects=[{predicate=RoomA.door_open, vars=RoomA, var_types=room}, {predicate=RoomA.is_clean, vars=RoomA, var_types=room}, {predicate=not ?r.is_sanitized, vars=?r, var_types=robot}], triggering_events=[assertion trigger "E1"], decomposition={a0={name=open-door, arguments=?r ?rm}, a1={name=clean-room, arguments=?r ?rm}}, group=True, divisible=True}, t2={id=AT2_1|1, name=RobotSanitization, arguments={?r=CleanerRobot, ?srm=room}, arguments_values={?r=, ?srm=SanitizationRoom}, locations=SanitizationRoom, robots_num={fixed=True, num=1}, preconditions=[{predicate=not ?r.is_sanitized, vars=?r, var_types=robot}], effects=[{predicate=?r.is_sanitized, vars=?r, var_types=robot}], triggering_events=[assertion trigger "E1"], decomposition={a0={name=sanitize-robot, arguments=?r ?srm}}, group=True, divisible=True}, t3={id=AT3_1|1, name=FurnitureMoving, arguments={?rt=robotteam, ?rm=room}, arguments_values={?rt=, ?rm=RoomA}, locations=RoomA, robots_num={fixed=False, min=2, max=4}, preconditions=, effects=[{predicate=RoomA.is_prepared, vars=RoomA, var_types=room}], triggering_events=, decomposition={a0={name=move-furniture, arguments=?rt ?rm}}, group=True, divisible=True}, t4={id=AT1_2|1, name=RoomCleaning, arguments={?r=CleanerRobot, ?rm=room}, arguments_values={?r=, ?rm=RoomB}, locations=RoomB, robots_num={fixed=True, num=1}, preconditions=[{predicate=RoomB.door_open, vars=RoomB, var_types=room}, {predicate=not RoomB.is_clean, vars=RoomB, var_types=room}], effects=[{predicate=RoomB.is_clean, vars=RoomB, var_types=room}, {predicate=not ?r.is_sanitized, vars=?r, var_types=robot}], triggering_events=[assertion trigger "E1"], decomposition={a0={name=clean-room, arguments=?r ?rm}}, group=True, divisible=True}, t5={id=AT1_2|2, name=RoomCleaning, arguments={?r=CleanerRobot, ?rm=room}, arguments_values={?r=, ?rm=RoomB}, locations=RoomB, robots_num={fixed=True, num=1}, preconditions=[{predicate=not RoomB.door_open, vars=RoomB, var_types=room}, {predicate=not RoomB.door_open, vars=RoomB, var_types=room}, {predicate=not RoomB.is_clean, vars=RoomB, var_types=room}], effects=[{predicate=RoomB.door_open, vars=RoomB, var_types=room}, {predicate=RoomB.is_clean, vars=RoomB, var_types=room}, {predicate=not ?r.is_sanitized, vars=?r, var_types=robot}], triggering_events=[assertion trigger "E1"], decomposition={a0={name=open-door, arguments=?r ?rm}, a1={name=clean-room, arguments=?r ?rm}}, group=True, divisible=True}, t6={id=AT2_2|1, name=RobotSanitization, arguments={?r=CleanerRobot, ?srm=room}, arguments_values={?r=, ?srm=SanitizationRoom}, locations=SanitizationRoom, robots_num={fixed=True, num=1}, preconditions=[{predicate=not ?r.is_sanitized, vars=?r, var_types=robot}], effects=[{predicate=?r.is_sanitized, vars=?r, var_types=robot}], triggering_events=[assertion trigger "E1"], decomposition={a0={name=sanitize-robot, arguments=?r ?srm}}, group=True, divisible=True}, t7={id=AT3_2|1, name=FurnitureMoving, arguments={?rt=robotteam, ?rm=room}, arguments_values={?rt=, ?rm=RoomB}, locations=RoomB, robots_num={fixed=False, min=2, max=4}, preconditions=, effects=[{predicate=RoomB.is_prepared, vars=RoomB, var_types=room}], triggering_events=, decomposition={a0={name=move-furniture, arguments=?rt ?rm}}, group=True, divisible=True}, t8={id=AT4_1|1, name=CheckCleanRooms, arguments={?r=robot, ?rms=rooms}, arguments_values={?r=, ?rms=[RoomA,RoomB]}, locations=[RoomA, RoomB], robots_num={fixed=True, num=1}, preconditions=[{predicate=RoomA.is_clean, vars=RoomA, var_types=room}, {predicate=RoomB.is_clean, vars=RoomB, var_types=room}], effects=, triggering_events=, decomposition={a0={name=clean-rooms-check, arguments=?r ?rms}}, group=True, divisible=True}}, constraints=[{type=SEQ, task_instances={t0=t7, t1=t8}}, {type=SEQ, task_instances={t0=t3, t1=t8}}, {type=SEQ, task_instances={t0=t6, t1=t8}}, {type=SEQ, task_instances={t0=t2, t1=t8}}, {type=SEQ, task_instances={t0=t0, t1=t3}}, {type=SEQ, task_instances={t0=t1, t1=t3}}, {type=SEQ, task_instances={t0=t0, t1=t2}}, {type=SEQ, task_instances={t0=t1, t1=t2}}, {type=SEQ, task_instances={t0=t4, t1=t7}}, {type=SEQ, task_instances={t0=t5, t1=t7}}, {type=SEQ, task_instances={t0=t4, t1=t6}}, {type=SEQ, task_instances={t0=t5, t1=t6}}, {type=EC, task_instances={t0=t0, t1=t2}, group=False, divisible=True}, {type=EC, task_instances={t0=t1, t1=t2}, group=False, divisible=True}, {type=EC, task_instances={t0=t4, t1=t6}, group=False, divisible=True}, {type=EC, task_instances={t0=t5, t1=t6}, group=False, divisible=True}], mission_decompositions=[[t1, t2, t3, t4, t6, t7, t8]]}>
	at br.com.unb.PistarModelFactoryApplicationTests.executePistarFactoryMutroseNotSendModelFile(PistarModelFactoryApplicationTests.java:29)

executePistarFactoryMutroseNotSendHddlFile  Time elapsed: 0.749 s  <<< FAILURE!
org.opentest4j.AssertionFailedError: expected: <null> but was: <{actions=[{name=clean-room, capabilities=cleaning}, {name=clean-rooms-check, capabilities=}, {name=move-furniture, capabilities=moveobject}, {name=open-door, capabilities=door-opening}, {name=sanitize-robot, capabilities=sanitize}], tasks={t0={id=AT1_1|1, name=RoomCleaning, arguments={?r=CleanerRobot, ?rm=room}, arguments_values={?r=, ?rm=RoomA}, locations=RoomA, robots_num={fixed=True, num=1}, preconditions=[{predicate=RoomA.door_open, vars=RoomA, var_types=room}, {predicate=not RoomA.is_clean, vars=RoomA, var_types=room}], effects=[{predicate=RoomA.is_clean, vars=RoomA, var_types=room}, {predicate=not ?r.is_sanitized, vars=?r, var_types=robot}], triggering_events=[assertion trigger "E1"], decomposition={a0={name=clean-room, arguments=?r ?rm}}, group=True, divisible=True}, t1={id=AT1_1|2, name=RoomCleaning, arguments={?r=CleanerRobot, ?rm=room}, arguments_values={?r=, ?rm=RoomA}, locations=RoomA, robots_num={fixed=True, num=1}, preconditions=[{predicate=not RoomA.door_open, vars=RoomA, var_types=room}, {predicate=not RoomA.door_open, vars=RoomA, var_types=room}, {predicate=not RoomA.is_clean, vars=RoomA, var_types=room}], effects=[{predicate=RoomA.door_open, vars=RoomA, var_types=room}, {predicate=RoomA.is_clean, vars=RoomA, var_types=room}, {predicate=not ?r.is_sanitized, vars=?r, var_types=robot}], triggering_events=[assertion trigger "E1"], decomposition={a0={name=open-door, arguments=?r ?rm}, a1={name=clean-room, arguments=?r ?rm}}, group=True, divisible=True}, t2={id=AT2_1|1, name=RobotSanitization, arguments={?r=CleanerRobot, ?srm=room}, arguments_values={?r=, ?srm=SanitizationRoom}, locations=SanitizationRoom, robots_num={fixed=True, num=1}, preconditions=[{predicate=not ?r.is_sanitized, vars=?r, var_types=robot}], effects=[{predicate=?r.is_sanitized, vars=?r, var_types=robot}], triggering_events=[assertion trigger "E1"], decomposition={a0={name=sanitize-robot, arguments=?r ?srm}}, group=True, divisible=True}, t3={id=AT3_1|1, name=FurnitureMoving, arguments={?rt=robotteam, ?rm=room}, arguments_values={?rt=, ?rm=RoomA}, locations=RoomA, robots_num={fixed=False, min=2, max=4}, preconditions=, effects=[{predicate=RoomA.is_prepared, vars=RoomA, var_types=room}], triggering_events=, decomposition={a0={name=move-furniture, arguments=?rt ?rm}}, group=True, divisible=True}, t4={id=AT1_2|1, name=RoomCleaning, arguments={?r=CleanerRobot, ?rm=room}, arguments_values={?r=, ?rm=RoomB}, locations=RoomB, robots_num={fixed=True, num=1}, preconditions=[{predicate=RoomB.door_open, vars=RoomB, var_types=room}, {predicate=not RoomB.is_clean, vars=RoomB, var_types=room}], effects=[{predicate=RoomB.is_clean, vars=RoomB, var_types=room}, {predicate=not ?r.is_sanitized, vars=?r, var_types=robot}], triggering_events=[assertion trigger "E1"], decomposition={a0={name=clean-room, arguments=?r ?rm}}, group=True, divisible=True}, t5={id=AT1_2|2, name=RoomCleaning, arguments={?r=CleanerRobot, ?rm=room}, arguments_values={?r=, ?rm=RoomB}, locations=RoomB, robots_num={fixed=True, num=1}, preconditions=[{predicate=not RoomB.door_open, vars=RoomB, var_types=room}, {predicate=not RoomB.door_open, vars=RoomB, var_types=room}, {predicate=not RoomB.is_clean, vars=RoomB, var_types=room}], effects=[{predicate=RoomB.door_open, vars=RoomB, var_types=room}, {predicate=RoomB.is_clean, vars=RoomB, var_types=room}, {predicate=not ?r.is_sanitized, vars=?r, var_types=robot}], triggering_events=[assertion trigger "E1"], decomposition={a0={name=open-door, arguments=?r ?rm}, a1={name=clean-room, arguments=?r ?rm}}, group=True, divisible=True}, t6={id=AT2_2|1, name=RobotSanitization, arguments={?r=CleanerRobot, ?srm=room}, arguments_values={?r=, ?srm=SanitizationRoom}, locations=SanitizationRoom, robots_num={fixed=True, num=1}, preconditions=[{predicate=not ?r.is_sanitized, vars=?r, var_types=robot}], effects=[{predicate=?r.is_sanitized, vars=?r, var_types=robot}], triggering_events=[assertion trigger "E1"], decomposition={a0={name=sanitize-robot, arguments=?r ?srm}}, group=True, divisible=True}, t7={id=AT3_2|1, name=FurnitureMoving, arguments={?rt=robotteam, ?rm=room}, arguments_values={?rt=, ?rm=RoomB}, locations=RoomB, robots_num={fixed=False, min=2, max=4}, preconditions=, effects=[{predicate=RoomB.is_prepared, vars=RoomB, var_types=room}], triggering_events=, decomposition={a0={name=move-furniture, arguments=?rt ?rm}}, group=True, divisible=True}, t8={id=AT4_1|1, name=CheckCleanRooms, arguments={?r=robot, ?rms=rooms}, arguments_values={?r=, ?rms=[RoomA,RoomB]}, locations=[RoomA, RoomB], robots_num={fixed=True, num=1}, preconditions=[{predicate=RoomA.is_clean, vars=RoomA, var_types=room}, {predicate=RoomB.is_clean, vars=RoomB, var_types=room}], effects=, triggering_events=, decomposition={a0={name=clean-rooms-check, arguments=?r ?rms}}, group=True, divisible=True}}, constraints=[{type=SEQ, task_instances={t0=t7, t1=t8}}, {type=SEQ, task_instances={t0=t3, t1=t8}}, {type=SEQ, task_instances={t0=t6, t1=t8}}, {type=SEQ, task_instances={t0=t2, t1=t8}}, {type=SEQ, task_instances={t0=t0, t1=t3}}, {type=SEQ, task_instances={t0=t1, t1=t3}}, {type=SEQ, task_instances={t0=t0, t1=t2}}, {type=SEQ, task_instances={t0=t1, t1=t2}}, {type=SEQ, task_instances={t0=t4, t1=t7}}, {type=SEQ, task_instances={t0=t5, t1=t7}}, {type=SEQ, task_instances={t0=t4, t1=t6}}, {type=SEQ, task_instances={t0=t5, t1=t6}}, {type=EC, task_instances={t0=t0, t1=t2}, group=False, divisible=True}, {type=EC, task_instances={t0=t1, t1=t2}, group=False, divisible=True}, {type=EC, task_instances={t0=t4, t1=t6}, group=False, divisible=True}, {type=EC, task_instances={t0=t5, t1=t6}, group=False, divisible=True}], mission_decompositions=[[t1, t2, t3, t4, t6, t7, t8]]}>
	at br.com.unb.PistarModelFactoryApplicationTests.executePistarFactoryMutroseNotSendHddlFile(PistarModelFactoryApplicationTests.java:36)

executePistarFactoryGODA  Time elapsed: 0.618 s  <<< FAILURE!
org.opentest4j.AssertionFailedError: 
expected: <{CostMax.pctl=R{"cost"}max=?[F"success"],
ReachabilityMin.pctl=Pmin=?[F"success"],
ReachabilityMax.pctl=Pmax=?[F"success"],
BSN.nm=mdpconstintCTX_1,
//SaO2_sensor=trueconstintCTX_2,
//ECG_sensor=trueconstintCTX_3,
//SaO2_sensor=true&ECG_sensor=trueconstintCTX_4,
//TEMP_sensor=trueconstintCTX_5,
//SaO2_sensor=true&TEMP_sensor=trueconstintCTX_6,
//ECG_sensor=true&TEMP_sensor=trueconstintCTX_7,
//SaO2_sensor=true&ECG_sensor=true&TEMP_sensor=trueconstintCTX_8,
//ABP_sensor=trueconstintCTX_9,
//SaO2_sensor=true&ABP_sensor=trueconstintCTX_10,
//ECG_sensor=true&ABP_sensor=trueconstintCTX_11,
//SaO2_sensor=true&ECG_sensor=true&ABP_sensor=trueconstintCTX_12,
//TEMP_sensor=true&ABP_sensor=trueconstintCTX_13,
//SaO2_sensor=true&TEMP_sensor=true&ABP_sensor=trueconstintCTX_14,
//ECG_sensor=true&TEMP_sensor=true&ABP_sensor=trueconstintCTX_15,
//SaO2_sensor=true&ECG_sensor=true&TEMP_sensor=true&ABP_sensor=trueconstintCTX_16,
//Unknown_sensor=trueconstintCTX_17,
//SaO2_sensor=true&Unknown_sensor=trueconstintCTX_18,
//ECG_sensor=true&Unknown_sensor=trueconstintCTX_19,
//SaO2_sensor=true&ECG_sensor=true&Unknown_sensor=trueconstintCTX_20,
//TEMP_sensor=true&Unknown_sensor=trueconstintCTX_21,
//SaO2_sensor=true&TEMP_sensor=true&Unknown_sensor=trueconstintCTX_22,
//ECG_sensor=true&TEMP_sensor=true&Unknown_sensor=trueconstintCTX_23,
//SaO2_sensor=true&ECG_sensor=true&TEMP_sensor=true&Unknown_sensor=trueconstintCTX_24,
//ABP_sensor=true&Unknown_sensor=trueconstintCTX_25,
//SaO2_sensor=true&ABP_sensor=true&Unknown_sensor=trueconstintCTX_26,
//ECG_sensor=true&ABP_sensor=true&Unknown_sensor=trueconstintCTX_27,
//SaO2_sensor=true&ECG_sensor=true&ABP_sensor=true&Unknown_sensor=trueconstintCTX_28,
//TEMP_sensor=true&ABP_sensor=true&Unknown_sensor=trueconstintCTX_29,
//SaO2_sensor=true&TEMP_sensor=true&ABP_sensor=true&Unknown_sensor=trueconstintCTX_30,
//ECG_sensor=true&TEMP_sensor=true&ABP_sensor=true&Unknown_sensor=trueconstintCTX_31,
//SaO2_sensor=true&ECG_sensor=true&TEMP_sensor=true&ABP_sensor=true&Unknown_sensor=trueglobalCTX_G3_T1_1:[0..1]init0,
globalCTX_G3_T1_2:[0..1]init0,
globalCTX_G3_T1_3:[0..1]init0,
globalCTX_G3_T1_4:[0..1]init0,
globalCTX_G3_T1_X:[0..1]init0,
moduleNonDeterminism_G3_T1sG3_T1:[0..2]init0,
[next_0]sG3_T1=0->(sG3_T1'=1),
[]sG3_T1=1->CTX_1:(sG3_T1'=2)&(CTX_G3_T1_1'=1)+(1-CTX_1):(sG3_T1'=1),
[]sG3_T1=1->CTX_2:(sG3_T1'=2)&(CTX_G3_T1_2'=1)+(1-CTX_2):(sG3_T1'=1),
[]sG3_T1=1->CTX_3:(sG3_T1'=2)&(CTX_G3_T1_1'=1)&(CTX_G3_T1_2'=1)+(1-CTX_3):(sG3_T1'=1),
[]sG3_T1=1->CTX_4:(sG3_T1'=2)&(CTX_G3_T1_3'=1)+(1-CTX_4):(sG3_T1'=1),
[]sG3_T1=1->CTX_5:(sG3_T1'=2)&(CTX_G3_T1_1'=1)&(CTX_G3_T1_3'=1)+(1-CTX_5):(sG3_T1'=1),
[]sG3_T1=1->CTX_6:(sG3_T1'=2)&(CTX_G3_T1_2'=1)&(CTX_G3_T1_3'=1)+(1-CTX_6):(sG3_T1'=1),
[]sG3_T1=1->CTX_7:(sG3_T1'=2)&(CTX_G3_T1_1'=1)&(CTX_G3_T1_2'=1)&(CTX_G3_T1_3'=1)+(1-CTX_7):(sG3_T1'=1),
[]sG3_T1=1->CTX_8:(sG3_T1'=2)&(CTX_G3_T1_4'=1)+(1-CTX_8):(sG3_T1'=1),
[]sG3_T1=1->CTX_9:(sG3_T1'=2)&(CTX_G3_T1_1'=1)&(CTX_G3_T1_4'=1)+(1-CTX_9):(sG3_T1'=1),
[]sG3_T1=1->CTX_10:(sG3_T1'=2)&(CTX_G3_T1_2'=1)&(CTX_G3_T1_4'=1)+(1-CTX_10):(sG3_T1'=1),
[]sG3_T1=1->CTX_11:(sG3_T1'=2)&(CTX_G3_T1_1'=1)&(CTX_G3_T1_2'=1)&(CTX_G3_T1_4'=1)+(1-CTX_11):(sG3_T1'=1),
[]sG3_T1=1->CTX_12:(sG3_T1'=2)&(CTX_G3_T1_3'=1)&(CTX_G3_T1_4'=1)+(1-CTX_12):(sG3_T1'=1),
[]sG3_T1=1->CTX_13:(sG3_T1'=2)&(CTX_G3_T1_1'=1)&(CTX_G3_T1_3'=1)&(CTX_G3_T1_4'=1)+(1-CTX_13):(sG3_T1'=1),
[]sG3_T1=1->CTX_14:(sG3_T1'=2)&(CTX_G3_T1_2'=1)&(CTX_G3_T1_3'=1)&(CTX_G3_T1_4'=1)+(1-CTX_14):(sG3_T1'=1),
[]sG3_T1=1->CTX_15:(sG3_T1'=2)&(CTX_G3_T1_1'=1)&(CTX_G3_T1_2'=1)&(CTX_G3_T1_3'=1)&(CTX_G3_T1_4'=1)+(1-CTX_15):(sG3_T1'=1),
[]sG3_T1=1->CTX_16:(sG3_T1'=2)&(CTX_G3_T1_X'=1)+(1-CTX_16):(sG3_T1'=1),
[]sG3_T1=1->CTX_17:(sG3_T1'=2)&(CTX_G3_T1_1'=1)&(CTX_G3_T1_X'=1)+(1-CTX_17):(sG3_T1'=1),
[]sG3_T1=1->CTX_18:(sG3_T1'=2)&(CTX_G3_T1_2'=1)&(CTX_G3_T1_X'=1)+(1-CTX_18):(sG3_T1'=1),
[]sG3_T1=1->CTX_19:(sG3_T1'=2)&(CTX_G3_T1_1'=1)&(CTX_G3_T1_2'=1)&(CTX_G3_T1_X'=1)+(1-CTX_19):(sG3_T1'=1),
[]sG3_T1=1->CTX_20:(sG3_T1'=2)&(CTX_G3_T1_3'=1)&(CTX_G3_T1_X'=1)+(1-CTX_20):(sG3_T1'=1),
[]sG3_T1=1->CTX_21:(sG3_T1'=2)&(CTX_G3_T1_1'=1)&(CTX_G3_T1_3'=1)&(CTX_G3_T1_X'=1)+(1-CTX_21):(sG3_T1'=1),
[]sG3_T1=1->CTX_22:(sG3_T1'=2)&(CTX_G3_T1_2'=1)&(CTX_G3_T1_3'=1)&(CTX_G3_T1_X'=1)+(1-CTX_22):(sG3_T1'=1),
[]sG3_T1=1->CTX_23:(sG3_T1'=2)&(CTX_G3_T1_1'=1)&(CTX_G3_T1_2'=1)&(CTX_G3_T1_3'=1)&(CTX_G3_T1_X'=1)+(1-CTX_23):(sG3_T1'=1),
[]sG3_T1=1->CTX_24:(sG3_T1'=2)&(CTX_G3_T1_4'=1)&(CTX_G3_T1_X'=1)+(1-CTX_24):(sG3_T1'=1),
[]sG3_T1=1->CTX_25:(sG3_T1'=2)&(CTX_G3_T1_1'=1)&(CTX_G3_T1_4'=1)&(CTX_G3_T1_X'=1)+(1-CTX_25):(sG3_T1'=1),
[]sG3_T1=1->CTX_26:(sG3_T1'=2)&(CTX_G3_T1_2'=1)&(CTX_G3_T1_4'=1)&(CTX_G3_T1_X'=1)+(1-CTX_26):(sG3_T1'=1),
[]sG3_T1=1->CTX_27:(sG3_T1'=2)&(CTX_G3_T1_1'=1)&(CTX_G3_T1_2'=1)&(CTX_G3_T1_4'=1)&(CTX_G3_T1_X'=1)+(1-CTX_27):(sG3_T1'=1),
[]sG3_T1=1->CTX_28:(sG3_T1'=2)&(CTX_G3_T1_3'=1)&(CTX_G3_T1_4'=1)&(CTX_G3_T1_X'=1)+(1-CTX_28):(sG3_T1'=1),
[]sG3_T1=1->CTX_29:(sG3_T1'=2)&(CTX_G3_T1_1'=1)&(CTX_G3_T1_3'=1)&(CTX_G3_T1_4'=1)&(CTX_G3_T1_X'=1)+(1-CTX_29):(sG3_T1'=1),
[]sG3_T1=1->CTX_30:(sG3_T1'=2)&(CTX_G3_T1_2'=1)&(CTX_G3_T1_3'=1)&(CTX_G3_T1_4'=1)&(CTX_G3_T1_X'=1)+(1-CTX_30):(sG3_T1'=1),
[]sG3_T1=1->CTX_31:(sG3_T1'=2)&(CTX_G3_T1_1'=1)&(CTX_G3_T1_2'=1)&(CTX_G3_T1_3'=1)&(CTX_G3_T1_4'=1)&(CTX_G3_T1_X'=1)+(1-CTX_31):(sG3_T1'=1),
[]sG3_T1=1->(sG3_T1'=2),
//nouncertaintyholding[next_1]sG3_T1=2->(sG3_T1'=2),
endmoduleconstdoubleR_G3_T1_11,
moduleG3_T1_11_ReadDatasG3_T1_11:[0..4]init0,
[next_1]sG3_T1_11=0->(sG3_T1_11'=1),
//inittorunning[]sG3_T1_11=1->R_G3_T1_11:(sG3_T1_11'=2)+(1-R_G3_T1_11):(sG3_T1_11'=4),
//runningtofinalstate[next_2]sG3_T1_11=2->(sG3_T1_11'=2),
//finalstatesuccess[next_2]sG3_T1_11=3->(sG3_T1_11'=3),
//finalstateskipped[next_2]sG3_T1_11=4->(sG3_T1_11'=4),
//finalstatefailureendmoduleconstdoubleR_G3_T1_12,
moduleG3_T1_12_FilterDatasG3_T1_12:[0..4]init0,
[next_2]sG3_T1_12=0->(sG3_T1_12'=1),
//inittorunning[]sG3_T1_12=1->R_G3_T1_12:(sG3_T1_12'=2)+(1-R_G3_T1_12):(sG3_T1_12'=4),
//runningtofinalstate[next_3]sG3_T1_12=2->(sG3_T1_12'=2),
//finalstatesuccess[next_3]sG3_T1_12=3->(sG3_T1_12'=3),
//finalstateskipped[next_3]sG3_T1_12=4->(sG3_T1_12'=4),
//finalstatefailureendmoduleconstdoubleR_G3_T1_13,
moduleG3_T1_13_TransferDatasG3_T1_13:[0..4]init0,
[next_3]sG3_T1_13=0->(sG3_T1_13'=1),
//inittorunning[]sG3_T1_13=1->R_G3_T1_13:(sG3_T1_13'=2)+(1-R_G3_T1_13):(sG3_T1_13'=4),
//runningtofinalstate[next_4]sG3_T1_13=2->(sG3_T1_13'=2),
//finalstatesuccess[next_4]sG3_T1_13=3->(sG3_T1_13'=3),
//finalstateskipped[next_4]sG3_T1_13=4->(sG3_T1_13'=4),
//finalstatefailureendmoduleconstdoubleR_G3_T1_21,
moduleG3_T1_21_ReadDatasG3_T1_21:[0..4]init0,
[next_1]sG3_T1_21=0->(sG3_T1_21'=1),
//inittorunning[]sG3_T1_21=1->R_G3_T1_21:(sG3_T1_21'=2)+(1-R_G3_T1_21):(sG3_T1_21'=4),
//runningtofinalstate[next_2]sG3_T1_21=2->(sG3_T1_21'=2),
//finalstatesuccess[next_2]sG3_T1_21=3->(sG3_T1_21'=3),
//finalstateskipped[next_2]sG3_T1_21=4->(sG3_T1_21'=4),
//finalstatefailureendmoduleconstdoubleR_G3_T1_22,
moduleG3_T1_22_FilterDatasG3_T1_22:[0..4]init0,
[next_2]sG3_T1_22=0->(sG3_T1_22'=1),
//inittorunning[]sG3_T1_22=1->R_G3_T1_22:(sG3_T1_22'=2)+(1-R_G3_T1_22):(sG3_T1_22'=4),
//runningtofinalstate[next_3]sG3_T1_22=2->(sG3_T1_22'=2),
//finalstatesuccess[next_3]sG3_T1_22=3->(sG3_T1_22'=3),
//finalstateskipped[next_3]sG3_T1_22=4->(sG3_T1_22'=4),
//finalstatefailureendmoduleconstdoubleR_G3_T1_23,
moduleG3_T1_23_TransferDatasG3_T1_23:[0..4]init0,
[next_3]sG3_T1_23=0->(sG3_T1_23'=1),
//inittorunning[]sG3_T1_23=1->R_G3_T1_23:(sG3_T1_23'=2)+(1-R_G3_T1_23):(sG3_T1_23'=4),
//runningtofinalstate[next_4]sG3_T1_23=2->(sG3_T1_23'=2),
//finalstatesuccess[next_4]sG3_T1_23=3->(sG3_T1_23'=3),
//finalstateskipped[next_4]sG3_T1_23=4->(sG3_T1_23'=4),
//finalstatefailureendmoduleconstdoubleR_G3_T1_31,
moduleG3_T1_31_ReadDatasG3_T1_31:[0..4]init0,
[next_1]sG3_T1_31=0->(sG3_T1_31'=1),
//inittorunning[]sG3_T1_31=1->R_G3_T1_31:(sG3_T1_31'=2)+(1-R_G3_T1_31):(sG3_T1_31'=4),
//runningtofinalstate[next_2]sG3_T1_31=2->(sG3_T1_31'=2),
//finalstatesuccess[next_2]sG3_T1_31=3->(sG3_T1_31'=3),
//finalstateskipped[next_2]sG3_T1_31=4->(sG3_T1_31'=4),
//finalstatefailureendmoduleconstdoubleR_G3_T1_32,
moduleG3_T1_32_FilterDatasG3_T1_32:[0..4]init0,
[next_2]sG3_T1_32=0->(sG3_T1_32'=1),
//inittorunning[]sG3_T1_32=1->R_G3_T1_32:(sG3_T1_32'=2)+(1-R_G3_T1_32):(sG3_T1_32'=4),
//runningtofinalstate[next_3]sG3_T1_32=2->(sG3_T1_32'=2),
//finalstatesuccess[next_3]sG3_T1_32=3->(sG3_T1_32'=3),
//finalstateskipped[next_3]sG3_T1_32=4->(sG3_T1_32'=4),
//finalstatefailureendmoduleconstdoubleR_G3_T1_33,
moduleG3_T1_33_TransferDatasG3_T1_33:[0..4]init0,
[next_3]sG3_T1_33=0->(sG3_T1_33'=1),
//inittorunning[]sG3_T1_33=1->R_G3_T1_33:(sG3_T1_33'=2)+(1-R_G3_T1_33):(sG3_T1_33'=4),
//runningtofinalstate[next_4]sG3_T1_33=2->(sG3_T1_33'=2),
//finalstatesuccess[next_4]sG3_T1_33=3->(sG3_T1_33'=3),
//finalstateskipped[next_4]sG3_T1_33=4->(sG3_T1_33'=4),
//finalstatefailureendmoduleconstdoubleR_G3_T1_411,
moduleG3_T1_411_ReadDiastolicsG3_T1_411:[0..4]init0,
[next_1]sG3_T1_411=0->(sG3_T1_411'=1),
//inittorunning[]sG3_T1_411=1->R_G3_T1_411:(sG3_T1_411'=2)+(1-R_G3_T1_411):(sG3_T1_411'=4),
//runningtofinalstate[next_2]sG3_T1_411=2->(sG3_T1_411'=2),
//finalstatesuccess[next_2]sG3_T1_411=3->(sG3_T1_411'=3),
//finalstateskipped[next_2]sG3_T1_411=4->(sG3_T1_411'=4),
//finalstatefailureendmoduleconstdoubleR_G3_T1_412,
moduleG3_T1_412_ReadSystolicsG3_T1_412:[0..4]init0,
[next_2]sG3_T1_412=0->(sG3_T1_412'=1),
//inittorunning[]sG3_T1_412=1->R_G3_T1_412:(sG3_T1_412'=2)+(1-R_G3_T1_412):(sG3_T1_412'=4),
//runningtofinalstate[next_3]sG3_T1_412=2->(sG3_T1_412'=2),
//finalstatesuccess[next_3]sG3_T1_412=3->(sG3_T1_412'=3),
//finalstateskipped[next_3]sG3_T1_412=4->(sG3_T1_412'=4),
//finalstatefailureendmoduleconstdoubleR_G3_T1_42,
moduleG3_T1_42_FilterDatasG3_T1_42:[0..4]init0,
[next_3]sG3_T1_42=0->(sG3_T1_42'=1),
//inittorunning[]sG3_T1_42=1->R_G3_T1_42:(sG3_T1_42'=2)+(1-R_G3_T1_42):(sG3_T1_42'=4),
//runningtofinalstate[next_4]sG3_T1_42=2->(sG3_T1_42'=2),
//finalstatesuccess[next_4]sG3_T1_42=3->(sG3_T1_42'=3),
//finalstateskipped[next_4]sG3_T1_42=4->(sG3_T1_42'=4),
//finalstatefailureendmoduleconstdoubleR_G3_T1_43,
moduleG3_T1_43_TransferDatasG3_T1_43:[0..4]init0,
[next_4]sG3_T1_43=0->(sG3_T1_43'=1),
//inittorunning[]sG3_T1_43=1->R_G3_T1_43:(sG3_T1_43'=2)+(1-R_G3_T1_43):(sG3_T1_43'=4),
//runningtofinalstate[next_5]sG3_T1_43=2->(sG3_T1_43'=2),
//finalstatesuccess[next_5]sG3_T1_43=3->(sG3_T1_43'=3),
//finalstateskipped[next_5]sG3_T1_43=4->(sG3_T1_43'=4),
//finalstatefailureendmoduleconstintOPT_G3_T1_X,
constdoubleR_G3_T1_X,
moduleG3_T1_X_UnknownsG3_T1_X:[0..4]init0,
[next_1]sG3_T1_X=0->OPT_G3_T1_X*CTX_G3_T1_X:(sG3_T1_X'=1)+(1-OPT_G3_T1_X*CTX_G3_T1_X):(sG3_T1_X'=3),
//inittorunningorskip[]sG3_T1_X=1->R_G3_T1_X:(sG3_T1_X'=2)+(1-R_G3_T1_X):(sG3_T1_X'=4),
//runningtofinalstate[next_2]sG3_T1_X=2->(sG3_T1_X'=2),
//finalstatesuccess[next_2]sG3_T1_X=3->(sG3_T1_X'=3),
//finalstateskipped[next_2]sG3_T1_X=4->(sG3_T1_X'=4),
//finalstatefailureendmoduleformulaG3=(((sG3_T1_11=2)&(sG3_T1_12=2)&(sG3_T1_13=2))|((sG3_T1_21=2)&(sG3_T1_22=2)&(sG3_T1_23=2))|((sG3_T1_31=2)&(sG3_T1_32=2)&(sG3_T1_33=2))|(((sG3_T1_411=2)&(sG3_T1_412=2))&(sG3_T1_42=2)&(sG3_T1_43=2))),
constdoubleR_G4_T1_1,
moduleG4_T1_1_FuseSensorsDatasG4_T1_1:[0..4]init0,
[next_5](G3)&sG4_T1_1=0->(sG4_T1_1'=1),
//inittorunning[next_5]!(G3)&sG4_T1_1=0->(sG4_T1_1'=3),
//inittoskip[]sG4_T1_1=1->R_G4_T1_1:(sG4_T1_1'=2)+(1-R_G4_T1_1):(sG4_T1_1'=4),
//runningtofinalstate[next_6]sG4_T1_1=2->(sG4_T1_1'=2),
//finalstatesuccess[next_6]sG4_T1_1=3->(sG4_T1_1'=3),
//finalstateskipped[next_6]sG4_T1_1=4->(sG4_T1_1'=4),
//finalstatefailureendmoduleconstdoubleR_G4_T1_2,
moduleG4_T1_2_DetectPatientStatussG4_T1_2:[0..4]init0,
[next_6](G3)&sG4_T1_2=0->(sG4_T1_2'=1),
//inittorunning[next_6]!(G3)&sG4_T1_2=0->(sG4_T1_2'=3),
//inittoskip[]sG4_T1_2=1->R_G4_T1_2:(sG4_T1_2'=2)+(1-R_G4_T1_2):(sG4_T1_2'=4),
//runningtofinalstate[next_7]sG4_T1_2=2->(sG4_T1_2'=2),
//finalstatesuccess[next_7]sG4_T1_2=3->(sG4_T1_2'=3),
//finalstateskipped[next_7]sG4_T1_2=4->(sG4_T1_2'=4),
//finalstatefailureendmoduleconstdoubleR_G4_T1_3,
moduleG4_T1_3_PersistDatasG4_T1_3:[0..4]init0,
[next_7](G3)&sG4_T1_3=0->(sG4_T1_3'=1),
//inittorunning[next_7]!(G3)&sG4_T1_3=0->(sG4_T1_3'=3),
//inittoskip[]sG4_T1_3=1->R_G4_T1_3:(sG4_T1_3'=2)+(1-R_G4_T1_3):(sG4_T1_3'=4),
//runningtofinalstate[next_8]sG4_T1_3=2->(sG4_T1_3'=2),
//finalstatesuccess[next_8]sG4_T1_3=3->(sG4_T1_3'=3),
//finalstateskipped[next_8]sG4_T1_3=4->(sG4_T1_3'=4),
//finalstatefailureendmoduleformulaG4=((sG4_T1_1=2)&(sG4_T1_2=2)&(sG4_T1_3=2)),
formulaG2=G3&G4,
formulaG1=G2,
label"success"=G1,
constdoubleW_G3_T1_11,
constdoubleW_G3_T1_12,
constdoubleW_G3_T1_13,
constdoubleW_G3_T1_21,
constdoubleW_G3_T1_22,
constdoubleW_G3_T1_23,
constdoubleW_G3_T1_31,
constdoubleW_G3_T1_32,
constdoubleW_G3_T1_33,
constdoubleW_G3_T1_411,
constdoubleW_G3_T1_412,
constdoubleW_G3_T1_42,
constdoubleW_G3_T1_43,
constdoubleW_G3_T1_X,
constdoubleW_G4_T1_1,
constdoubleW_G4_T1_2,
constdoubleW_G4_T1_3,
rewards"cost"sG3_T1_11=1:W_G3_T1_11,
sG3_T1_12=1:W_G3_T1_12,
sG3_T1_13=1:W_G3_T1_13,
sG3_T1_21=1:W_G3_T1_21,
sG3_T1_22=1:W_G3_T1_22,
sG3_T1_23=1:W_G3_T1_23,
sG3_T1_31=1:W_G3_T1_31,
sG3_T1_32=1:W_G3_T1_32,
sG3_T1_33=1:W_G3_T1_33,
sG3_T1_411=1:W_G3_T1_411,
sG3_T1_412=1:W_G3_T1_412,
sG3_T1_42=1:W_G3_T1_42,
sG3_T1_43=1:W_G3_T1_43,
sG3_T1_X=1:W_G3_T1_X,
sG4_T1_1=1:W_G4_T1_1,
sG4_T1_2=1:W_G4_T1_2,
sG4_T1_3=1:W_G4_T1_3,
endrewards,
CostMin.pctl=R{"cost"}min=?[F"success"]}> but was: <{CostMax.pctl=R{"cost"}max=?[F"success"],
ReachabilityMax.pctl=Pmax=?[F"success"],
ReachabilityMin.pctl=Pmin=?[F"success"],
BSN.nm=mdpconstintCTX_1,
//SaO2_sensor=trueconstintCTX_2,
//ECG_sensor=trueconstintCTX_3,
//SaO2_sensor=true&ECG_sensor=trueconstintCTX_4,
//TEMP_sensor=trueconstintCTX_5,
//SaO2_sensor=true&TEMP_sensor=trueconstintCTX_6,
//ECG_sensor=true&TEMP_sensor=trueconstintCTX_7,
//SaO2_sensor=true&ECG_sensor=true&TEMP_sensor=trueconstintCTX_8,
//ABP_sensor=trueconstintCTX_9,
//SaO2_sensor=true&ABP_sensor=trueconstintCTX_10,
//ECG_sensor=true&ABP_sensor=trueconstintCTX_11,
//SaO2_sensor=true&ECG_sensor=true&ABP_sensor=trueconstintCTX_12,
//TEMP_sensor=true&ABP_sensor=trueconstintCTX_13,
//SaO2_sensor=true&TEMP_sensor=true&ABP_sensor=trueconstintCTX_14,
//ECG_sensor=true&TEMP_sensor=true&ABP_sensor=trueconstintCTX_15,
//SaO2_sensor=true&ECG_sensor=true&TEMP_sensor=true&ABP_sensor=trueconstintCTX_16,
//Unknown_sensor=trueconstintCTX_17,
//SaO2_sensor=true&Unknown_sensor=trueconstintCTX_18,
//ECG_sensor=true&Unknown_sensor=trueconstintCTX_19,
//SaO2_sensor=true&ECG_sensor=true&Unknown_sensor=trueconstintCTX_20,
//TEMP_sensor=true&Unknown_sensor=trueconstintCTX_21,
//SaO2_sensor=true&TEMP_sensor=true&Unknown_sensor=trueconstintCTX_22,
//ECG_sensor=true&TEMP_sensor=true&Unknown_sensor=trueconstintCTX_23,
//SaO2_sensor=true&ECG_sensor=true&TEMP_sensor=true&Unknown_sensor=trueconstintCTX_24,
//ABP_sensor=true&Unknown_sensor=trueconstintCTX_25,
//SaO2_sensor=true&ABP_sensor=true&Unknown_sensor=trueconstintCTX_26,
//ECG_sensor=true&ABP_sensor=true&Unknown_sensor=trueconstintCTX_27,
//SaO2_sensor=true&ECG_sensor=true&ABP_sensor=true&Unknown_sensor=trueconstintCTX_28,
//TEMP_sensor=true&ABP_sensor=true&Unknown_sensor=trueconstintCTX_29,
//SaO2_sensor=true&TEMP_sensor=true&ABP_sensor=true&Unknown_sensor=trueconstintCTX_30,
//ECG_sensor=true&TEMP_sensor=true&ABP_sensor=true&Unknown_sensor=trueconstintCTX_31,
//SaO2_sensor=true&ECG_sensor=true&TEMP_sensor=true&ABP_sensor=true&Unknown_sensor=trueglobalCTX_G3_T1_1:[0..1]init0,
globalCTX_G3_T1_2:[0..1]init0,
globalCTX_G3_T1_3:[0..1]init0,
globalCTX_G3_T1_4:[0..1]init0,
globalCTX_G3_T1_X:[0..1]init0,
moduleNonDeterminism_G3_T1sG3_T1:[0..2]init0,
[next_0]sG3_T1=0->(sG3_T1'=1),
[]sG3_T1=1->CTX_1:(sG3_T1'=2)&(CTX_G3_T1_1'=1)+(1-CTX_1):(sG3_T1'=1),
[]sG3_T1=1->CTX_2:(sG3_T1'=2)&(CTX_G3_T1_2'=1)+(1-CTX_2):(sG3_T1'=1),
[]sG3_T1=1->CTX_3:(sG3_T1'=2)&(CTX_G3_T1_1'=1)&(CTX_G3_T1_2'=1)+(1-CTX_3):(sG3_T1'=1),
[]sG3_T1=1->CTX_4:(sG3_T1'=2)&(CTX_G3_T1_3'=1)+(1-CTX_4):(sG3_T1'=1),
[]sG3_T1=1->CTX_5:(sG3_T1'=2)&(CTX_G3_T1_1'=1)&(CTX_G3_T1_3'=1)+(1-CTX_5):(sG3_T1'=1),
[]sG3_T1=1->CTX_6:(sG3_T1'=2)&(CTX_G3_T1_2'=1)&(CTX_G3_T1_3'=1)+(1-CTX_6):(sG3_T1'=1),
[]sG3_T1=1->CTX_7:(sG3_T1'=2)&(CTX_G3_T1_1'=1)&(CTX_G3_T1_2'=1)&(CTX_G3_T1_3'=1)+(1-CTX_7):(sG3_T1'=1),
[]sG3_T1=1->CTX_8:(sG3_T1'=2)&(CTX_G3_T1_4'=1)+(1-CTX_8):(sG3_T1'=1),
[]sG3_T1=1->CTX_9:(sG3_T1'=2)&(CTX_G3_T1_1'=1)&(CTX_G3_T1_4'=1)+(1-CTX_9):(sG3_T1'=1),
[]sG3_T1=1->CTX_10:(sG3_T1'=2)&(CTX_G3_T1_2'=1)&(CTX_G3_T1_4'=1)+(1-CTX_10):(sG3_T1'=1),
[]sG3_T1=1->CTX_11:(sG3_T1'=2)&(CTX_G3_T1_1'=1)&(CTX_G3_T1_2'=1)&(CTX_G3_T1_4'=1)+(1-CTX_11):(sG3_T1'=1),
[]sG3_T1=1->CTX_12:(sG3_T1'=2)&(CTX_G3_T1_3'=1)&(CTX_G3_T1_4'=1)+(1-CTX_12):(sG3_T1'=1),
[]sG3_T1=1->CTX_13:(sG3_T1'=2)&(CTX_G3_T1_1'=1)&(CTX_G3_T1_3'=1)&(CTX_G3_T1_4'=1)+(1-CTX_13):(sG3_T1'=1),
[]sG3_T1=1->CTX_14:(sG3_T1'=2)&(CTX_G3_T1_2'=1)&(CTX_G3_T1_3'=1)&(CTX_G3_T1_4'=1)+(1-CTX_14):(sG3_T1'=1),
[]sG3_T1=1->CTX_15:(sG3_T1'=2)&(CTX_G3_T1_1'=1)&(CTX_G3_T1_2'=1)&(CTX_G3_T1_3'=1)&(CTX_G3_T1_4'=1)+(1-CTX_15):(sG3_T1'=1),
[]sG3_T1=1->CTX_16:(sG3_T1'=2)&(CTX_G3_T1_X'=1)+(1-CTX_16):(sG3_T1'=1),
[]sG3_T1=1->CTX_17:(sG3_T1'=2)&(CTX_G3_T1_1'=1)&(CTX_G3_T1_X'=1)+(1-CTX_17):(sG3_T1'=1),
[]sG3_T1=1->CTX_18:(sG3_T1'=2)&(CTX_G3_T1_2'=1)&(CTX_G3_T1_X'=1)+(1-CTX_18):(sG3_T1'=1),
[]sG3_T1=1->CTX_19:(sG3_T1'=2)&(CTX_G3_T1_1'=1)&(CTX_G3_T1_2'=1)&(CTX_G3_T1_X'=1)+(1-CTX_19):(sG3_T1'=1),
[]sG3_T1=1->CTX_20:(sG3_T1'=2)&(CTX_G3_T1_3'=1)&(CTX_G3_T1_X'=1)+(1-CTX_20):(sG3_T1'=1),
[]sG3_T1=1->CTX_21:(sG3_T1'=2)&(CTX_G3_T1_1'=1)&(CTX_G3_T1_3'=1)&(CTX_G3_T1_X'=1)+(1-CTX_21):(sG3_T1'=1),
[]sG3_T1=1->CTX_22:(sG3_T1'=2)&(CTX_G3_T1_2'=1)&(CTX_G3_T1_3'=1)&(CTX_G3_T1_X'=1)+(1-CTX_22):(sG3_T1'=1),
[]sG3_T1=1->CTX_23:(sG3_T1'=2)&(CTX_G3_T1_1'=1)&(CTX_G3_T1_2'=1)&(CTX_G3_T1_3'=1)&(CTX_G3_T1_X'=1)+(1-CTX_23):(sG3_T1'=1),
[]sG3_T1=1->CTX_24:(sG3_T1'=2)&(CTX_G3_T1_4'=1)&(CTX_G3_T1_X'=1)+(1-CTX_24):(sG3_T1'=1),
[]sG3_T1=1->CTX_25:(sG3_T1'=2)&(CTX_G3_T1_1'=1)&(CTX_G3_T1_4'=1)&(CTX_G3_T1_X'=1)+(1-CTX_25):(sG3_T1'=1),
[]sG3_T1=1->CTX_26:(sG3_T1'=2)&(CTX_G3_T1_2'=1)&(CTX_G3_T1_4'=1)&(CTX_G3_T1_X'=1)+(1-CTX_26):(sG3_T1'=1),
[]sG3_T1=1->CTX_27:(sG3_T1'=2)&(CTX_G3_T1_1'=1)&(CTX_G3_T1_2'=1)&(CTX_G3_T1_4'=1)&(CTX_G3_T1_X'=1)+(1-CTX_27):(sG3_T1'=1),
[]sG3_T1=1->CTX_28:(sG3_T1'=2)&(CTX_G3_T1_3'=1)&(CTX_G3_T1_4'=1)&(CTX_G3_T1_X'=1)+(1-CTX_28):(sG3_T1'=1),
[]sG3_T1=1->CTX_29:(sG3_T1'=2)&(CTX_G3_T1_1'=1)&(CTX_G3_T1_3'=1)&(CTX_G3_T1_4'=1)&(CTX_G3_T1_X'=1)+(1-CTX_29):(sG3_T1'=1),
[]sG3_T1=1->CTX_30:(sG3_T1'=2)&(CTX_G3_T1_2'=1)&(CTX_G3_T1_3'=1)&(CTX_G3_T1_4'=1)&(CTX_G3_T1_X'=1)+(1-CTX_30):(sG3_T1'=1),
[]sG3_T1=1->CTX_31:(sG3_T1'=2)&(CTX_G3_T1_1'=1)&(CTX_G3_T1_2'=1)&(CTX_G3_T1_3'=1)&(CTX_G3_T1_4'=1)&(CTX_G3_T1_X'=1)+(1-CTX_31):(sG3_T1'=1),
[]sG3_T1=1->(sG3_T1'=2),
//nouncertaintyholding[next_1]sG3_T1=2->(sG3_T1'=2),
endmoduleconstdoubleR_G3_T1_11,
moduleG3_T1_11_ReadDatasG3_T1_11:[0..4]init0,
[next_1]sG3_T1_11=0->(sG3_T1_11'=1),
//inittorunning[]sG3_T1_11=1->R_G3_T1_11:(sG3_T1_11'=2)+(1-R_G3_T1_11):(sG3_T1_11'=4),
//runningtofinalstate[next_2]sG3_T1_11=2->(sG3_T1_11'=2),
//finalstatesuccess[next_2]sG3_T1_11=3->(sG3_T1_11'=3),
//finalstateskipped[next_2]sG3_T1_11=4->(sG3_T1_11'=4),
//finalstatefailureendmoduleconstdoubleR_G3_T1_12,
moduleG3_T1_12_FilterDatasG3_T1_12:[0..4]init0,
[next_2]sG3_T1_12=0->(sG3_T1_12'=1),
//inittorunning[]sG3_T1_12=1->R_G3_T1_12:(sG3_T1_12'=2)+(1-R_G3_T1_12):(sG3_T1_12'=4),
//runningtofinalstate[next_3]sG3_T1_12=2->(sG3_T1_12'=2),
//finalstatesuccess[next_3]sG3_T1_12=3->(sG3_T1_12'=3),
//finalstateskipped[next_3]sG3_T1_12=4->(sG3_T1_12'=4),
//finalstatefailureendmoduleconstdoubleR_G3_T1_13,
moduleG3_T1_13_TransferDatasG3_T1_13:[0..4]init0,
[next_3]sG3_T1_13=0->(sG3_T1_13'=1),
//inittorunning[]sG3_T1_13=1->R_G3_T1_13:(sG3_T1_13'=2)+(1-R_G3_T1_13):(sG3_T1_13'=4),
//runningtofinalstate[next_4]sG3_T1_13=2->(sG3_T1_13'=2),
//finalstatesuccess[next_4]sG3_T1_13=3->(sG3_T1_13'=3),
//finalstateskipped[next_4]sG3_T1_13=4->(sG3_T1_13'=4),
//finalstatefailureendmoduleconstdoubleR_G3_T1_21,
moduleG3_T1_21_ReadDatasG3_T1_21:[0..4]init0,
[next_1]sG3_T1_21=0->(sG3_T1_21'=1),
//inittorunning[]sG3_T1_21=1->R_G3_T1_21:(sG3_T1_21'=2)+(1-R_G3_T1_21):(sG3_T1_21'=4),
//runningtofinalstate[next_2]sG3_T1_21=2->(sG3_T1_21'=2),
//finalstatesuccess[next_2]sG3_T1_21=3->(sG3_T1_21'=3),
//finalstateskipped[next_2]sG3_T1_21=4->(sG3_T1_21'=4),
//finalstatefailureendmoduleconstdoubleR_G3_T1_22,
moduleG3_T1_22_FilterDatasG3_T1_22:[0..4]init0,
[next_2]sG3_T1_22=0->(sG3_T1_22'=1),
//inittorunning[]sG3_T1_22=1->R_G3_T1_22:(sG3_T1_22'=2)+(1-R_G3_T1_22):(sG3_T1_22'=4),
//runningtofinalstate[next_3]sG3_T1_22=2->(sG3_T1_22'=2),
//finalstatesuccess[next_3]sG3_T1_22=3->(sG3_T1_22'=3),
//finalstateskipped[next_3]sG3_T1_22=4->(sG3_T1_22'=4),
//finalstatefailureendmoduleconstdoubleR_G3_T1_23,
moduleG3_T1_23_TransferDatasG3_T1_23:[0..4]init0,
[next_3]sG3_T1_23=0->(sG3_T1_23'=1),
//inittorunning[]sG3_T1_23=1->R_G3_T1_23:(sG3_T1_23'=2)+(1-R_G3_T1_23):(sG3_T1_23'=4),
//runningtofinalstate[next_4]sG3_T1_23=2->(sG3_T1_23'=2),
//finalstatesuccess[next_4]sG3_T1_23=3->(sG3_T1_23'=3),
//finalstateskipped[next_4]sG3_T1_23=4->(sG3_T1_23'=4),
//finalstatefailureendmoduleconstdoubleR_G3_T1_31,
moduleG3_T1_31_ReadDatasG3_T1_31:[0..4]init0,
[next_1]sG3_T1_31=0->(sG3_T1_31'=1),
//inittorunning[]sG3_T1_31=1->R_G3_T1_31:(sG3_T1_31'=2)+(1-R_G3_T1_31):(sG3_T1_31'=4),
//runningtofinalstate[next_2]sG3_T1_31=2->(sG3_T1_31'=2),
//finalstatesuccess[next_2]sG3_T1_31=3->(sG3_T1_31'=3),
//finalstateskipped[next_2]sG3_T1_31=4->(sG3_T1_31'=4),
//finalstatefailureendmoduleconstdoubleR_G3_T1_32,
moduleG3_T1_32_FilterDatasG3_T1_32:[0..4]init0,
[next_2]sG3_T1_32=0->(sG3_T1_32'=1),
//inittorunning[]sG3_T1_32=1->R_G3_T1_32:(sG3_T1_32'=2)+(1-R_G3_T1_32):(sG3_T1_32'=4),
//runningtofinalstate[next_3]sG3_T1_32=2->(sG3_T1_32'=2),
//finalstatesuccess[next_3]sG3_T1_32=3->(sG3_T1_32'=3),
//finalstateskipped[next_3]sG3_T1_32=4->(sG3_T1_32'=4),
//finalstatefailureendmoduleconstdoubleR_G3_T1_33,
moduleG3_T1_33_TransferDatasG3_T1_33:[0..4]init0,
[next_3]sG3_T1_33=0->(sG3_T1_33'=1),
//inittorunning[]sG3_T1_33=1->R_G3_T1_33:(sG3_T1_33'=2)+(1-R_G3_T1_33):(sG3_T1_33'=4),
//runningtofinalstate[next_4]sG3_T1_33=2->(sG3_T1_33'=2),
//finalstatesuccess[next_4]sG3_T1_33=3->(sG3_T1_33'=3),
//finalstateskipped[next_4]sG3_T1_33=4->(sG3_T1_33'=4),
//finalstatefailureendmoduleconstdoubleR_G3_T1_411,
moduleG3_T1_411_ReadDiastolicsG3_T1_411:[0..4]init0,
[next_1]sG3_T1_411=0->(sG3_T1_411'=1),
//inittorunning[]sG3_T1_411=1->R_G3_T1_411:(sG3_T1_411'=2)+(1-R_G3_T1_411):(sG3_T1_411'=4),
//runningtofinalstate[next_2]sG3_T1_411=2->(sG3_T1_411'=2),
//finalstatesuccess[next_2]sG3_T1_411=3->(sG3_T1_411'=3),
//finalstateskipped[next_2]sG3_T1_411=4->(sG3_T1_411'=4),
//finalstatefailureendmoduleconstdoubleR_G3_T1_412,
moduleG3_T1_412_ReadSystolicsG3_T1_412:[0..4]init0,
[next_2]sG3_T1_412=0->(sG3_T1_412'=1),
//inittorunning[]sG3_T1_412=1->R_G3_T1_412:(sG3_T1_412'=2)+(1-R_G3_T1_412):(sG3_T1_412'=4),
//runningtofinalstate[next_3]sG3_T1_412=2->(sG3_T1_412'=2),
//finalstatesuccess[next_3]sG3_T1_412=3->(sG3_T1_412'=3),
//finalstateskipped[next_3]sG3_T1_412=4->(sG3_T1_412'=4),
//finalstatefailureendmoduleconstdoubleR_G3_T1_42,
moduleG3_T1_42_FilterDatasG3_T1_42:[0..4]init0,
[next_3]sG3_T1_42=0->(sG3_T1_42'=1),
//inittorunning[]sG3_T1_42=1->R_G3_T1_42:(sG3_T1_42'=2)+(1-R_G3_T1_42):(sG3_T1_42'=4),
//runningtofinalstate[next_4]sG3_T1_42=2->(sG3_T1_42'=2),
//finalstatesuccess[next_4]sG3_T1_42=3->(sG3_T1_42'=3),
//finalstateskipped[next_4]sG3_T1_42=4->(sG3_T1_42'=4),
//finalstatefailureendmoduleconstdoubleR_G3_T1_43,
moduleG3_T1_43_TransferDatasG3_T1_43:[0..4]init0,
[next_4]sG3_T1_43=0->(sG3_T1_43'=1),
//inittorunning[]sG3_T1_43=1->R_G3_T1_43:(sG3_T1_43'=2)+(1-R_G3_T1_43):(sG3_T1_43'=4),
//runningtofinalstate[next_5]sG3_T1_43=2->(sG3_T1_43'=2),
//finalstatesuccess[next_5]sG3_T1_43=3->(sG3_T1_43'=3),
//finalstateskipped[next_5]sG3_T1_43=4->(sG3_T1_43'=4),
//finalstatefailureendmoduleconstintOPT_G3_T1_X,
constdoubleR_G3_T1_X,
moduleG3_T1_X_UnknownsG3_T1_X:[0..4]init0,
[next_1]sG3_T1_X=0->OPT_G3_T1_X*CTX_G3_T1_X:(sG3_T1_X'=1)+(1-OPT_G3_T1_X*CTX_G3_T1_X):(sG3_T1_X'=3),
//inittorunningorskip[]sG3_T1_X=1->R_G3_T1_X:(sG3_T1_X'=2)+(1-R_G3_T1_X):(sG3_T1_X'=4),
//runningtofinalstate[next_2]sG3_T1_X=2->(sG3_T1_X'=2),
//finalstatesuccess[next_2]sG3_T1_X=3->(sG3_T1_X'=3),
//finalstateskipped[next_2]sG3_T1_X=4->(sG3_T1_X'=4),
//finalstatefailureendmoduleformulaG3=(((sG3_T1_11=2)&(sG3_T1_12=2)&(sG3_T1_13=2))|((sG3_T1_21=2)&(sG3_T1_22=2)&(sG3_T1_23=2))|((sG3_T1_31=2)&(sG3_T1_32=2)&(sG3_T1_33=2))|(((sG3_T1_411=2)&(sG3_T1_412=2))&(sG3_T1_42=2)&(sG3_T1_43=2))),
constdoubleR_G4_T1_1,
moduleG4_T1_1_FuseSensorsDatasG4_T1_1:[0..4]init0,
[next_5](G3)&sG4_T1_1=0->(sG4_T1_1'=1),
//inittorunning[next_5]!(G3)&sG4_T1_1=0->(sG4_T1_1'=3),
//inittoskip[]sG4_T1_1=1->R_G4_T1_1:(sG4_T1_1'=2)+(1-R_G4_T1_1):(sG4_T1_1'=4),
//runningtofinalstate[next_6]sG4_T1_1=2->(sG4_T1_1'=2),
//finalstatesuccess[next_6]sG4_T1_1=3->(sG4_T1_1'=3),
//finalstateskipped[next_6]sG4_T1_1=4->(sG4_T1_1'=4),
//finalstatefailureendmoduleconstdoubleR_G4_T1_2,
moduleG4_T1_2_DetectPatientStatussG4_T1_2:[0..4]init0,
[next_6](G3)&sG4_T1_2=0->(sG4_T1_2'=1),
//inittorunning[next_6]!(G3)&sG4_T1_2=0->(sG4_T1_2'=3),
//inittoskip[]sG4_T1_2=1->R_G4_T1_2:(sG4_T1_2'=2)+(1-R_G4_T1_2):(sG4_T1_2'=4),
//runningtofinalstate[next_7]sG4_T1_2=2->(sG4_T1_2'=2),
//finalstatesuccess[next_7]sG4_T1_2=3->(sG4_T1_2'=3),
//finalstateskipped[next_7]sG4_T1_2=4->(sG4_T1_2'=4),
//finalstatefailureendmoduleconstdoubleR_G4_T1_3,
moduleG4_T1_3_PersistDatasG4_T1_3:[0..4]init0,
[next_7](G3)&sG4_T1_3=0->(sG4_T1_3'=1),
//inittorunning[next_7]!(G3)&sG4_T1_3=0->(sG4_T1_3'=3),
//inittoskip[]sG4_T1_3=1->R_G4_T1_3:(sG4_T1_3'=2)+(1-R_G4_T1_3):(sG4_T1_3'=4),
//runningtofinalstate[next_8]sG4_T1_3=2->(sG4_T1_3'=2),
//finalstatesuccess[next_8]sG4_T1_3=3->(sG4_T1_3'=3),
//finalstateskipped[next_8]sG4_T1_3=4->(sG4_T1_3'=4),
//finalstatefailureendmoduleformulaG4=((sG4_T1_1=2)&(sG4_T1_2=2)&(sG4_T1_3=2)),
formulaG2=G3&G4,
formulaG1=G2,
label"success"=G1,
constdoubleW_G3_T1_11,
constdoubleW_G3_T1_12,
constdoubleW_G3_T1_13,
constdoubleW_G3_T1_21,
constdoubleW_G3_T1_22,
constdoubleW_G3_T1_23,
constdoubleW_G3_T1_31,
constdoubleW_G3_T1_32,
constdoubleW_G3_T1_33,
constdoubleW_G3_T1_411,
constdoubleW_G3_T1_412,
constdoubleW_G3_T1_42,
constdoubleW_G3_T1_43,
constdoubleW_G3_T1_X,
constdoubleW_G4_T1_1,
constdoubleW_G4_T1_2,
constdoubleW_G4_T1_3,
rewards"cost"sG3_T1_11=1:W_G3_T1_11,
sG3_T1_12=1:W_G3_T1_12,
sG3_T1_13=1:W_G3_T1_13,
sG3_T1_21=1:W_G3_T1_21,
sG3_T1_22=1:W_G3_T1_22,
sG3_T1_23=1:W_G3_T1_23,
sG3_T1_31=1:W_G3_T1_31,
sG3_T1_32=1:W_G3_T1_32,
sG3_T1_33=1:W_G3_T1_33,
sG3_T1_411=1:W_G3_T1_411,
sG3_T1_412=1:W_G3_T1_412,
sG3_T1_42=1:W_G3_T1_42,
sG3_T1_43=1:W_G3_T1_43,
sG3_T1_X=1:W_G3_T1_X,
sG4_T1_1=1:W_G4_T1_1,
sG4_T1_2=1:W_G4_T1_2,
sG4_T1_3=1:W_G4_T1_3,
endrewards,
CostMin.pctl=R{"cost"}min=?[F"success"]}>
	at br.com.unb.PistarModelFactoryApplicationTests.executePistarFactoryGODA(PistarModelFactoryApplicationTests.java:59)

